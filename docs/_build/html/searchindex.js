Search.setIndex({"docnames": ["api/tianshou.data", "api/tianshou.env", "api/tianshou.exploration", "api/tianshou.policy", "api/tianshou.trainer", "api/tianshou.utils", "contributing", "contributor", "index", "tutorials/batch", "tutorials/benchmark", "tutorials/cheatsheet", "tutorials/concepts", "tutorials/dqn", "tutorials/get_started", "tutorials/logger", "tutorials/tictactoe"], "filenames": ["api/tianshou.data.rst", "api/tianshou.env.rst", "api/tianshou.exploration.rst", "api/tianshou.policy.rst", "api/tianshou.trainer.rst", "api/tianshou.utils.rst", "contributing.rst", "contributor.rst", "index.rst", "tutorials/batch.rst", "tutorials/benchmark.rst", "tutorials/cheatsheet.rst", "tutorials/concepts.rst", "tutorials/dqn.rst", "tutorials/get_started.rst", "tutorials/logger.rst", "tutorials/tictactoe.rst"], "titles": ["tianshou.data", "tianshou.env", "tianshou.exploration", "tianshou.policy", "tianshou.trainer", "tianshou.utils", "Contributing to Tianshou", "Contributor", "Welcome to Tianshou!", "Understand Batch", "Benchmark", "Cheat Sheet", "Basic concepts in Tianshou", "Deep Q Network", "Get Started with Jupyter Notebook", "Logging Experiments", "Multi-Agent RL"], "terms": {"class": [0, 1, 2, 3, 4, 5, 8, 11, 12, 13, 16], "batch_dict": [0, 9], "dict": [0, 1, 3, 4, 5, 8, 9, 11, 13, 16], "batchprotocol": [0, 3], "sequenc": [0, 1, 2, 5], "ndarrai": [0, 1, 2, 3, 4, 5, 9, 11, 12, 13, 16], "none": [0, 1, 2, 3, 4, 5, 9, 11, 13, 16], "copi": [0, 9, 11, 12, 16], "bool": [0, 1, 3, 4, 5, 9], "fals": [0, 1, 3, 4, 5, 9, 11, 12, 16], "kwarg": [0, 1, 3, 5, 9, 11], "ani": [0, 1, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 16], "sourc": [0, 1, 2, 3, 4, 5, 10], "base": [0, 1, 2, 4, 5, 8, 11, 12, 13], "The": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15], "intern": [0, 3, 9, 12, 13], "structur": [0, 5, 12, 16], "i": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 15, 16], "kind": [0, 1, 4, 9, 11, 12], "supercharg": 0, "arrai": [0, 1, 2, 3, 5, 9, 11, 12, 13, 16], "tempor": 0, "store": [0, 3, 9, 11, 12, 13, 16], "individu": 0, "recurs": [0, 9], "dictionari": [0, 4, 5, 9, 11, 13], "object": [0, 1, 2, 3, 4, 5, 9, 11, 12], "can": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 16], "either": [0, 1, 3, 5, 11, 12, 16], "numpi": [0, 1, 2, 3, 4, 5, 8, 9, 11, 12, 13, 16], "torch": [0, 3, 5, 9, 12, 13, 15, 16], "tensor": [0, 3, 5, 12, 13], "themselv": [0, 16], "It": [0, 1, 3, 4, 5, 8, 9, 11, 12, 13, 15, 16], "design": [0, 9, 16], "make": [0, 1, 5, 6, 7, 9, 11, 12, 16], "extrem": 0, "easili": [0, 9, 12], "access": [0, 3, 5, 9], "manipul": 0, "set": [0, 1, 3, 4, 5, 6, 9, 11, 12, 13, 16], "partial": [0, 9], "view": [0, 3, 6, 13], "heterogen": 0, "conveni": [0, 12, 13], "For": [0, 1, 2, 3, 5, 9, 11, 12, 13, 15, 16], "detail": [0, 3, 5, 9, 10, 12, 13, 16], "descript": [0, 11, 12, 13], "pleas": [0, 1, 3, 5, 6, 10, 11, 12, 13, 15], "refer": [0, 1, 2, 3, 5, 6, 9, 10, 11, 13, 15], "understand": [0, 3, 8, 12, 16], "__getitem__": [0, 12], "index": [0, 1, 6, 8, 9, 12, 13, 16], "str": [0, 1, 3, 4, 5, 15, 16], "slice": [0, 9, 12], "int": [0, 1, 2, 3, 4, 5, 9, 11, 12, 13, 16], "list": [0, 1, 3, 5, 7, 9, 10, 11, 12, 16], "tbatch": [0, 3], "return": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16], "self": [0, 1, 2, 3, 5, 8, 11, 12, 13, 16], "__setitem__": 0, "valu": [0, 1, 3, 5, 9, 11, 12, 16], "assign": [0, 5], "chang": [0, 3, 5, 6, 11, 16], "all": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 16], "place": [0, 9, 15, 16], "dtype": [0, 9, 11, 12, 13, 16], "devic": [0, 3, 5, 9, 11, 15, 16], "cpu": [0, 3, 5, 9, 10, 16], "cat_": [0, 9], "concaten": [0, 5, 9], "one": [0, 1, 4, 5, 9, 10, 12, 13, 16], "current": [0, 1, 3, 4, 8, 9, 11, 12, 13, 15, 16], "static": [0, 1, 3], "cat": [0, 9], "singl": [0, 1, 4, 5, 9, 10, 11, 12, 13, 16], "new": [0, 1, 2, 3, 6, 9, 13, 16], "kei": [0, 1, 3, 4, 5, 11, 12, 13, 16], "ar": [0, 1, 3, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16], "share": [0, 1, 9, 13], "across": [0, 9, 10], "do": [0, 3, 4, 5, 9, 11, 13], "have": [0, 1, 3, 4, 5, 6, 8, 9, 11, 12, 13, 16], "pad": [0, 9], "zero": [0, 5, 9, 11, 12], "appropri": [0, 3, 9], "shape": [0, 2, 3, 4, 5, 12, 13, 16], "e": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13], "g": [0, 1, 3, 4, 5, 6, 8, 10, 11, 12, 13], "np": [0, 1, 3, 4, 9, 11, 12, 13, 16], "3": [0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 16], "4": [0, 1, 3, 9, 10, 11, 12, 13, 16], "common": [0, 9, 11, 12, 13, 14, 16], "c": [0, 3, 8, 9, 11, 12], "5": [0, 1, 3, 5, 9, 10, 11, 12], "b": [0, 5, 8, 9, 11, 12, 15], "7": [0, 1, 5, 9, 10, 11, 12, 16], "stack_": [0, 9], "axi": [0, 9], "0": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 16], "stack": [0, 9, 11, 12], "6": [0, 1, 5, 9, 10, 12, 16], "2": [0, 1, 3, 4, 5, 9, 10, 11, 12, 13, 16], "If": [0, 1, 3, 4, 5, 8, 9, 11, 13, 16], "undefin": [0, 9], "caus": [0, 9, 11], "an": [0, 1, 2, 3, 4, 5, 6, 7, 9, 12], "except": [0, 3, 9, 11], "empty_": [0, 9], "empti": [0, 3, 5, 9, 11, 16], "fill": [0, 9], "specifi": [0, 1, 4, 5, 11, 12, 13], "onli": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 13, 16], "reset": [0, 1, 2, 5, 11, 12, 13, 16], "specif": [0, 1, 5, 9, 11, 12, 13, 16], "print": [0, 1, 4, 5, 8, 9, 11, 12, 13, 16], "st": [0, 4], "d": [0, 9, 11, 12, 13], "1": [0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 16], "true": [0, 1, 3, 4, 5, 9, 11, 12, 13, 16], "same": [0, 1, 3, 4, 5, 9, 10, 12, 13, 16], "given": [0, 1, 3, 4, 5, 9, 11, 12], "updat": [0, 1, 3, 4, 5, 9, 10, 11, 12, 13, 16], "thi": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16], "from": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16], "anoth": [0, 3, 11, 12], "__len__": [0, 1], "len": [0, 1, 5, 9, 11, 12, 16], "is_empti": [0, 9], "test": [0, 3, 4, 5, 8, 11, 12, 13, 16], "further": [0, 1, 9, 11, 12, 13], "els": [0, 1, 9, 11, 13, 16], "exist": [0, 4, 5, 8, 9, 11, 12, 13], "mainli": [0, 8, 11], "us": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16], "distinguish": [0, 3, 12], "thei": [0, 1, 3, 9, 11], "both": [0, 5, 8, 9, 10, 11, 13, 16], "rais": [0, 9], "when": [0, 1, 3, 4, 5, 6, 9, 11, 12, 13, 16], "appli": [0, 3, 5, 9, 11, 13], "former": [0, 5, 12], "while": [0, 3, 5, 9, 10, 12, 13, 16], "latter": [0, 5, 9, 16], "scalar": [0, 4, 5, 9, 16], "cannot": [0, 9, 11, 12], "usag": [0, 1, 2, 3, 4, 5, 12, 13, 14, 16], "where": [0, 3, 5, 9, 11, 12, 16], "we": [0, 1, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16], "skip": 0, "check": [0, 3, 8, 9, 12, 16], "length": [0, 3, 5, 16], "float64": [0, 9], "properti": [0, 12], "split": [0, 3, 9, 12], "size": [0, 2, 3, 4, 5, 9, 11, 12, 13, 16], "shuffl": [0, 9], "merge_last": 0, "iter": [0, 3, 4, 9, 12], "whole": [0, 9, 11], "multipl": [0, 5, 9, 11, 13, 15], "small": 0, "paramet": [0, 1, 2, 3, 4, 5, 11, 13, 16], "divid": [0, 12], "smaller": [0, 16], "than": [0, 3, 11, 12, 13, 16], "mean": [0, 1, 3, 4, 5, 9, 10, 11, 12, 13, 16], "randomli": [0, 3, 16], "entir": 0, "otherwis": [0, 1, 3, 5, 11, 12, 13, 16], "remain": 0, "default": [0, 1, 2, 3, 4, 5, 9, 11, 16], "merg": 0, "last": [0, 1, 5, 9, 12, 13, 16], "previou": [0, 1, 12], "stack_num": [0, 11, 12], "ignore_obs_next": [0, 12], "save_only_last_ob": 0, "sample_avail": 0, "gener": [0, 1, 2, 3, 5, 8, 11, 12, 13, 16], "interact": [0, 3, 11, 12, 13], "between": [0, 12], "polici": [0, 1, 5, 8, 9, 14, 16], "environ": [0, 1, 3, 4, 8, 9, 12, 14], "consid": [0, 3, 9, 12], "special": [0, 9, 12, 16], "form": [0, 3, 9, 12], "manag": [0, 3, 12, 15], "circular": [0, 12], "queue": [0, 12], "style": [0, 8, 12], "exampl": [0, 1, 3, 4, 5, 9, 10, 12, 13, 15, 16], "out": [0, 3, 8, 12, 13, 16], "section": [0, 9, 12, 13, 16], "basic": [0, 5, 8, 14], "concept": [0, 8, 9, 13], "maximum": [0, 3, 4, 5, 13], "replai": [0, 3, 8, 9, 11, 12, 13, 14], "frame": [0, 12], "sampl": [0, 3, 4, 5, 8, 9, 12, 13], "argument": [0, 1, 5, 9, 11, 12, 16], "should": [0, 1, 3, 5, 6, 9, 11, 12, 16], "greater": [0, 3], "equal": [0, 1, 2, 3, 5, 12], "whether": [0, 1, 3, 4, 5, 9, 13, 16], "obs_next": [0, 3, 11, 12, 13], "save": [0, 3, 4, 5, 9, 11, 12, 15, 16], "ob": [0, 1, 3, 5, 11, 12, 13, 16], "ha": [0, 1, 2, 3, 5, 9, 11, 12, 13, 16], "timestep": [0, 1, 5, 10, 11, 13, 16], "becaus": [0, 3, 9, 10, 11, 16], "indic": [0, 1, 3, 4, 5, 11, 12, 13, 16], "avail": [0, 1, 3, 9, 11, 12, 15, 16], "method": [0, 1, 3, 4, 5, 11, 12, 13], "save_hdf5": [0, 12], "path": [0, 4, 15, 16], "compress": 0, "hdf5": [0, 12], "file": [0, 3, 6, 11, 12, 16], "classmethod": 0, "load_hdf5": [0, 12], "load": [0, 3, 5, 11, 12, 15, 16], "from_data": 0, "dataset": [0, 9], "act": [0, 1, 3, 5, 11, 12, 13, 16], "rew": [0, 1, 3, 11, 12, 13, 16], "termin": [0, 1, 3, 12], "truncat": [0, 1, 3, 12], "done": [0, 1, 3, 9, 11, 12, 13, 16], "keep_statist": 0, "clear": [0, 16], "episod": [0, 1, 3, 4, 12, 13, 16], "statist": [0, 4, 5, 12], "set_batch": 0, "rolloutbatchprotocol": [0, 3], "manual": [0, 13], "choos": [0, 3, 16], "you": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16], "want": [0, 3, 4, 5, 9, 11, 12, 13, 15], "unfinished_index": [0, 3], "unfinish": [0, 1, 3], "prev": [0, 12], "transit": [0, 3, 4, 9, 12, 13], "won": 0, "t": [0, 3, 4, 5, 9, 11, 12, 13], "modifi": [0, 1, 3, 5, 6, 11], "begin": [0, 4, 13], "next": [0, 1, 3, 5, 11, 12, 13, 16], "end": [0, 1, 3, 5, 6], "move": [0, 5, 11, 12, 13], "fail": [0, 9], "add": [0, 3, 5, 11, 12], "buffer_id": 0, "tupl": [0, 1, 3, 4, 5, 9, 13, 16], "input": [0, 3, 5, 9, 12, 13], "requir": [0, 2, 3, 8, 9, 11, 16], "consist": [0, 1, 9, 10], "other": [0, 1, 3, 4, 8, 10, 11, 12, 13, 14, 16], "": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 16], "function": [0, 1, 3, 4, 5, 8, 9, 11, 12, 13, 15, 16], "assum": [0, 11, 12, 13], "first": [0, 1, 3, 5, 9, 11, 12, 13, 16], "dimens": [0, 1, 3, 5, 9, 11, 12], "alwai": [0, 7, 9, 10, 16], "current_index": 0, "episode_reward": 0, "episode_length": 0, "episode_start_index": 0, "finish": [0, 1, 3, 4, 11, 12, 13, 16], "sample_indic": [0, 12], "batch_siz": [0, 3, 4, 5, 12, 13, 16], "get": [0, 1, 3, 4, 5, 8, 9, 11, 12, 13, 16], "random": [0, 1, 3, 5, 8, 9, 10, 11, 12, 13], "its": [0, 3, 5, 9, 12, 16], "correspond": [0, 1, 3, 9, 12], "insid": [0, 5], "default_valu": 0, "result": [0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 15, 16], "reserved_kei": 0, "found": [0, 1, 3, 6, 13], "larger": [0, 12], "alpha": [0, 3], "float": [0, 1, 2, 3, 4, 5, 9, 13, 16], "beta": [0, 3], "weight_norm": 0, "implement": [0, 1, 3, 5, 10, 11, 12, 16], "priorit": [0, 3, 8, 12], "experi": [0, 2, 3, 5, 8, 10, 14, 16], "arxiv": [0, 3, 5, 13], "1511": [0, 3], "05952": 0, "expon": 0, "import": [0, 8, 9, 11, 12, 13, 15, 16], "soft": [0, 3, 8], "coeffici": [0, 3], "normal": [0, 1, 3, 5, 11], "weight": [0, 3, 5], "within": [0, 1, 3, 5, 11, 12, 13], "api": [0, 1, 6, 9, 11, 13, 16], "init_weight": 0, "get_weight": 0, "loss": [0, 3, 13], "debia": 0, "process": [0, 2, 3, 4, 5, 8, 12, 13], "some": [0, 1, 3, 4, 9, 11, 12, 13, 16], "more": [0, 3, 5, 7, 11, 12, 13, 16], "often": [0, 9, 11], "so": [0, 1, 3, 9, 11, 12, 16], "less": [0, 16], "update_weight": [0, 3], "new_weight": 0, "prioriti": 0, "priobatchprotocol": 0, "set_beta": 0, "compute_reward_fn": 0, "callabl": [0, 1, 3, 4, 5], "horizon": 0, "future_k": 0, "8": [0, 1, 3, 5, 8, 10, 12, 16], "hindsight": [0, 8], "1707": [0, 3, 13], "01495": 0, "goal": [0, 4, 13], "observ": [0, 1, 3, 5, 9, 11, 12, 13, 16], "achieved_go": [0, 11], "desired_go": [0, 11], "support": [0, 1, 3, 5, 8, 9, 11, 12, 13], "her": 0, "futur": [0, 9], "strategi": 0, "onlin": [0, 3], "take": [0, 1, 3, 5, 9, 11, 12, 13, 16], "acheived_go": 0, "reward": [0, 1, 3, 4, 9, 10, 11, 12, 13, 16], "two": [0, 3, 5, 9, 10, 12], "original_shap": 0, "must": [0, 1, 3, 4, 5, 11, 12, 13], "number": [0, 1, 3, 4, 5, 9, 11, 12, 13], "step": [0, 1, 3, 4, 5, 8, 9, 10, 12, 13, 14, 15, 16], "k": [0, 4, 9, 13], "introduc": [0, 9], "paper": [0, 3, 10], "In": [0, 1, 3, 5, 9, 11, 12, 13, 14, 16], "short": [0, 9, 12], "most": [0, 3, 9, 10, 11, 14], "re": 0, "written": [0, 6, 9], "everi": [0, 3, 4, 5, 6, 10, 12, 13, 15], "unalt": 0, "dure": [0, 1, 3, 4, 5, 9, 12, 13, 16], "addition": 0, "accord": [0, 3, 5, 6, 12, 16], "rewrite_transit": 0, "write": [0, 5, 11, 12], "directli": [0, 3, 4, 9, 11, 16], "temporarili": 0, "restor": [0, 3, 9, 11, 15], "right": [0, 9, 11, 13, 16], "befor": [0, 1, 3, 4, 5, 6, 11, 13], "etc": [0, 5], "sure": [0, 1, 5, 6, 11, 13], "n": [0, 3, 4, 5, 8, 9, 11, 12, 13, 16], "calcul": [0, 3, 5, 12], "perform": [0, 1, 4, 5, 10, 12, 16], "correctli": [0, 6, 9, 11, 12, 16], "without": [0, 5, 9, 11, 12], "addit": [0, 3, 4, 5, 11], "alter": [0, 5], "buffer_list": 0, "contain": [0, 1, 3, 4, 5, 10, 12, 16], "exactli": [0, 1, 3, 11, 13], "configur": [0, 5, 15], "These": [0, 11], "contigu": 0, "memori": [0, 3, 11, 12, 13], "layout": 0, "storag": [0, 12], "space": [0, 1, 3, 5, 11, 13, 16], "each": [0, 1, 3, 4, 5, 9, 10, 11, 12, 13, 14, 16], "shallow": [0, 11], "topmost": 0, "need": [0, 3, 4, 5, 9, 11, 12, 15, 16], "handl": 0, "By": [0, 9, 11, 16], "buffer_num": [0, 12], "total_s": [0, 12], "differ": [0, 1, 2, 5, 8, 9, 10, 12, 13, 14], "yet": [0, 13], "keep": [0, 1, 5, 9, 11, 12], "order": [0, 1, 3, 5, 12], "time": [0, 1, 3, 4, 5, 12, 16], "total": [0, 4, 5, 12, 13, 16], "which": [0, 1, 2, 3, 4, 5, 8, 10, 11, 12, 13, 15, 16], "under": [0, 3, 6, 8, 10, 15], "main_buff": 0, "cached_buffer_num": 0, "max_episode_length": 0, "main": [0, 1, 3, 6, 12, 13], "cach": 0, "cached_buff": 0, "whose": [0, 3, 9], "behav": [0, 9], "creat": [0, 3, 5, 9, 11, 12], "maxsiz": 0, "cached_buffer_id": 0, "th": [0, 1, 3, 16], "basepolici": [0, 3, 4, 11, 12], "env": [0, 3, 8, 9, 10, 11, 12, 13, 16], "basevectorenv": [0, 11], "preprocess_fn": [0, 11], "exploration_nois": [0, 3, 13, 16], "enabl": [0, 6, 9, 11, 12, 15], "type": [0, 3, 4, 5, 8, 9, 11, 12, 13, 16], "exact": 0, "instanc": [0, 3, 4, 5, 9, 16], "gym": [0, 1, 3, 10, 11, 12, 13, 16], "call": [0, 1, 3, 4, 5, 9, 11, 13, 16], "been": [0, 1, 16], "ad": [0, 3, 4, 9, 11, 12], "see": [0, 4, 5, 6, 9, 11, 12, 13, 14, 16], "issu": [0, 5, 11, 12], "42": [0, 11], "stream": [0, 5], "determin": [0, 1, 3, 9, 12], "action": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 16], "explor": [0, 3, 8, 12, 16], "nois": [0, 2, 3, 5], "automat": [0, 1, 3, 5, 6, 9, 12, 13, 15], "format": [0, 1, 5, 6, 11], "receiv": [0, 1, 4, 11, 13], "env_id": [0, 1, 11], "info": [0, 1, 3, 4, 5, 11, 12, 13, 16], "altern": 0, "mai": [0, 1, 3, 5, 11, 12, 13, 16], "also": [0, 3, 5, 8, 9, 10, 11, 12, 13, 15, 16], "accept": [0, 1, 3, 13], "test_collector": [0, 4, 5, 11, 13, 16], "py": [0, 5, 6, 11, 13, 15, 16], "limit": 0, "n_episod": [0, 4, 12, 13, 16], "collect": [0, 1, 3, 4, 5, 9, 10, 11, 12, 13, 16], "option": [0, 3, 5, 9, 16], "past": 0, "version": [0, 5, 8, 11, 13, 15], "wa": [0, 4], "pass": [0, 1, 4, 5, 9, 11, 12, 13, 15, 16], "__init__": [0, 3, 11, 12, 13], "reset_buff": 0, "gym_reset_kwarg": 0, "possibli": [0, 9], "attach": [0, 9], "extra": [0, 3, 13], "keyword": [0, 3, 9], "reset_stat": 0, "variabl": [0, 11, 12, 13, 16], "reset_env": 0, "n_step": [0, 3, 12, 13, 16], "render": [0, 1, 11, 12, 13, 16], "no_grad": 0, "To": [0, 5, 6, 9, 11], "ensur": 0, "unbias": 0, "env_num": [0, 1], "evenli": 0, "how": [0, 3, 4, 5, 9, 11, 12, 13, 14, 15, 16], "mani": [0, 3, 4, 8, 9], "sleep": [0, 11, 12], "consecut": [0, 12, 13, 16], "retain": 0, "gradient": [0, 3, 4, 8, 12, 13], "forward": [0, 3, 5, 11, 13], "One": [0, 16], "permit": 0, "A": [0, 1, 3, 4, 5, 6, 9, 13], "includ": [0, 3, 5, 8, 9, 10, 11, 12, 13], "follow": [0, 3, 4, 6, 8, 9, 11, 12, 13, 16], "ep": [0, 2, 3, 12, 13, 16], "over": [0, 3, 4, 5, 9, 12, 13, 16], "idx": 0, "start": [0, 1, 8, 11, 12, 16], "rew_std": 0, "standard": [0, 3, 5, 11], "error": [0, 3, 5, 6, 8, 16], "len_std": 0, "async": [0, 1], "vector": [0, 1, 5, 8, 9, 11, 12, 14, 16], "explan": [0, 3, 5, 13, 16], "doesn": [0, 3, 4, 12], "instead": [0, 1, 3, 5, 11, 13], "x": [0, 5, 9, 10, 11, 16], "y": [0, 5], "segment": [0, 12], "tree": [0, 10, 12], "arr": [0, 9], "fast": [0, 8, 11, 13], "queri": 0, "sum": [0, 3, 12], "interv": [0, 5], "left": [0, 13], "o": [0, 15, 16], "log": [0, 3, 4, 5, 8, 11, 13, 16], "procedur": [0, 3, 4, 12, 13], "power": 0, "leaf": [0, 9], "node": [0, 9], "depth": 0, "binari": [0, 3], "heap": 0, "duplic": 0, "later": [0, 1, 9], "overwrit": [0, 5], "ones": [0, 1], "reduc": 0, "oper": [0, 3, 4, 5, 8, 9, 12, 13], "get_prefix_sum_idx": 0, "find": [0, 5, 7, 9], "minimum": [0, 3, 9], "v": [0, 3, 5], "le": 0, "mathrm": [0, 3], "_i": 0, "sum_": [0, 3], "j": [0, 13], "_j": 0, "non": [0, 9], "neg": 0, "env_fn": [1, 11], "worker_fn": 1, "wait_num": [1, 11], "timeout": [1, 11, 13], "lambda": [1, 3, 11, 12, 13, 16], "task": [1, 10, 12, 15], "_": [1, 12, 13, 16], "rang": [1, 3, 11, 12, 13, 16], "assert": 1, "word": 1, "efn": 1, "inherit": [1, 3, 5, 11, 12, 13], "here": [1, 3, 6, 8, 9, 10, 11, 12, 13, 15, 16], "seed": [1, 10, 11, 13, 16], "line": [1, 4, 8, 13], "9": [1, 5, 10, 12, 13, 16], "synchron": [1, 3, 8, 11], "close": [1, 3, 11, 16], "your": [1, 3, 5, 6, 8, 11, 12, 13, 15], "own": [1, 5, 6, 11, 12, 13], "up": [1, 6, 9, 10, 12, 13], "properli": [1, 6, 11, 13], "def": [1, 11, 12, 13, 15, 16], "output": [1, 3, 5, 11, 12, 13, 16], "asynchron": [1, 8, 11, 12], "simul": [1, 11, 13], "cost": [1, 3, 11], "vari": [1, 9, 10, 11, 16], "wait": [1, 11], "wast": 1, "case": [1, 3, 9, 11, 12, 13, 16], "disabl": [1, 5], "abov": [1, 3, 11, 13, 16], "deal": [1, 9], "those": [1, 3, 5, 11, 12, 15], "spend": 1, "second": [1, 3, 4, 5, 11, 13, 16], "get_env_attr": 1, "id": [1, 5, 11, 12, 16], "attribut": [1, 3, 9, 12], "underli": 1, "retriev": 1, "denot": [1, 9], "element": [1, 5, 16], "correspondingli": 1, "desir": [1, 4], "set_env_attr": 1, "state": [1, 2, 3, 5, 8, 9, 10, 13], "initi": [1, 2, 3, 5, 9, 11, 12], "run": [1, 5, 6, 9, 11, 13, 15, 16], "dynam": [1, 11], "reach": [1, 4, 9, 13], "respons": [1, 16], "batch": [1, 3, 4, 5, 8, 13, 14, 16], "batch_ob": 1, "batch_rew": 1, "batch_don": 1, "batch_info": 1, "provid": [1, 3, 8, 9, 10, 11, 12, 13, 16], "agent": [1, 4, 5, 8, 12], "amount": [1, 3], "after": [1, 3, 5, 8, 11, 15, 16], "auxiliari": 1, "diagnost": 1, "inform": [1, 3, 4, 5, 11, 13, 16], "help": [1, 3, 7, 9, 12, 16], "debug": [1, 11], "sometim": 1, "learn": [1, 3, 4, 5, 8, 9, 12, 13, 16], "subset": [1, 3], "fetch": 1, "extend": [1, 13], "reproduc": [1, 9, 10, 15], "onc": [1, 12, 13], "garbag": 1, "wai": [1, 9, 11, 12, 13], "assur": 1, "dummi": [1, 5], "loop": [1, 3, 5, 11, 12, 13], "subprocess": 1, "optim": [1, 3, 8, 11, 13, 16], "buffer": [1, 3, 4, 9, 11, 13, 14, 16], "exchang": 1, "rai": [1, 13], "choic": [1, 11, 13, 16], "distribut": [1, 3, 5, 9], "cluster": [1, 11, 13], "action_per_dim": 1, "actionwrapp": 1, "discret": [1, 3, 8, 11, 13, 16], "continu": [1, 3, 11, 13, 15, 16], "arg": [1, 3, 5, 11, 15, 16], "origin": [1, 3, 13], "venv": [1, 11], "update_obs_rm": 1, "obs_rm": 1, "set_obs_rm": 1, "runningmeanstd": [1, 5], "std": [1, 3, 5], "get_obs_rm": 1, "abc": [1, 2, 3, 5], "abstract": [1, 2, 3, 5, 9, 11], "send": [1, 3, 5], "signal": 1, "low": [1, 3], "level": [1, 13], "pair": [1, 9, 11, 12], "recv": 1, "null": 1, "old": 1, "coupl": 1, "sync": 1, "user": [1, 3, 5, 8, 9, 12, 13], "But": [1, 3, 9, 11], "separ": 1, "someon": 1, "readi": 1, "close_env": 1, "sequenti": [1, 3, 13], "share_memori": 1, "basewrapp": 1, "aecenv": 1, "interfac": [1, 3, 5, 8, 12, 13], "pet": 1, "zoo": 1, "multi": [1, 4, 5, 8, 12], "wrap": [1, 11, 16], "agent_id": [1, 3, 11, 16], "mask": [1, 3, 11, 16], "trunc": 1, "term": [1, 9, 11], "reinforc": [1, 3, 8, 9, 10, 12, 13, 16], "execut": [1, 3, 13, 16], "agent_select": 1, "switch": [1, 11], "control": [1, 3, 12, 13], "resourc": 1, "releas": 1, "window": 1, "network": [1, 3, 4, 8, 12, 16], "connect": 1, "render_mod": [1, 16], "mode": [1, 3, 5, 6, 11], "human": [1, 13, 16], "displai": [1, 4, 12], "rgb_arrai": 1, "outsid": 1, "classic": [1, 14, 16], "ansi": 1, "string": [1, 3, 9], "basenois": [2, 3], "__call__": 2, "gaussiannois": [2, 3], "mu": [2, 3, 5, 13], "sigma": [2, 3, 5, 13], "vanilla": [2, 3], "gaussian": [2, 3, 13], "ddpg": [2, 8, 10, 13], "ounois": 2, "theta": 2, "15": [2, 10, 12, 13], "dt": 2, "01": [2, 3, 11, 13], "x0": 2, "ornstein": 2, "uhlenbeck": 2, "init": 2, "logit": [2, 3, 5, 13], "stackoverflow": 2, "page": [2, 6, 7, 8, 11], "howev": [2, 9, 12], "our": [2, 7, 10, 16], "show": [2, 9, 10, 11, 12, 13, 14, 16], "similar": [2, 3, 5, 9, 11], "openai": [2, 10], "spinningup": 2, "littl": 2, "observation_spac": [3, 11, 13, 16], "action_spac": [3, 11, 13, 16], "action_sc": 3, "action_bound_method": 3, "liter": [3, 16], "clip": 3, "tanh": [3, 5], "lr_schedul": [3, 5], "lambdalr": [3, 5], "multiplelrschedul": [3, 5], "modul": [3, 5, 8, 9, 13, 14, 16], "rl": [3, 4, 5, 8, 9, 11, 12, 13], "aim": [3, 9, 12], "modular": [3, 12], "algorithm": [3, 4, 5, 8, 10, 11, 12, 13, 14, 16], "come": [3, 9, 12, 15], "sever": [3, 4, 11, 12], "typic": [3, 9, 11, 12], "part": [3, 9, 12], "cope": 3, "target": [3, 12, 13, 16], "comput": [3, 5, 9, 12], "process_fn": 3, "pre": [3, 6, 11, 12, 13, 16], "data": [3, 4, 5, 8, 12, 13, 16], "post_process_fn": [3, 12], "train": [3, 4, 5, 8, 12], "neural": [3, 12, 13], "predict": [3, 5, 9, 13], "rule": [3, 9, 11, 13, 16], "defin": [3, 8, 9, 12, 13, 15, 16], "hidden": [3, 5, 12, 13, 16], "rnn": [3, 8, 12, 13], "intermedi": [3, 11, 12, 16], "could": [3, 10, 11, 13], "depend": [3, 12, 13], "ppo": [3, 10, 13, 14], "might": [3, 4, 10, 13], "thing": [3, 5, 11], "what": [3, 4], "sinc": [3, 5, 11, 12, 13], "nn": [3, 5, 13], "almost": [3, 5, 11, 13, 16], "state_dict": [3, 5, 13, 16], "pth": [3, 13, 16], "load_state_dict": [3, 5, 13, 16], "appear": 3, "unus": [3, 5], "scale": [3, 5], "note": [3, 4, 10, 16], "set_agent_id": 3, "marl": 3, "doe": [3, 4, 5, 12, 15, 16], "overridden": [3, 5], "subclass": [3, 5], "actual": [3, 5, 16], "someth": 3, "taken": 3, "kept": 3, "advanc": [3, 5, 12, 15, 16], "soft_upd": 3, "tgt": 3, "src": 3, "tau": [3, 5], "softli": 3, "toward": 3, "code": [3, 5, 8, 9, 10, 11, 12, 16], "dist": 3, "reserv": [3, 12], "log_prob": 3, "map_act": 3, "real": [3, 9], "map": [3, 5, 11, 12], "raw": [3, 13], "affect": [3, 5], "remap": 3, "thu": [3, 5, 8, 10, 11, 12], "black": 3, "box": [3, 16], "transform": [3, 11], "bound": 3, "expect": [3, 4, 16], "inf": [3, 5], "high": 3, "map_action_invers": 3, "invers": [3, 5], "replaybuff": [3, 4, 11, 12], "categor": [3, 8], "care": [3, 5], "about": [3, 9, 16], "give": [3, 9, 11, 12, 16], "auto": 3, "broadcast": [3, 9], "numer": 3, "amplifi": 3, "post": [3, 12], "effect": 3, "sample_s": [3, 5], "extract": [3, 12], "value_mask": 3, "valid": [3, 9, 12], "usual": [3, 4, 11], "flag": [3, 11, 12], "invalid": 3, "q": [3, 5, 8, 11, 12, 16], "advantag": [3, 8, 9], "meaningless": 3, "even": [3, 4, 9, 12], "mislead": 3, "hand": 3, "timelimit": 3, "game": [3, 10, 11, 16], "assist": 3, "correct": [3, 5, 16], "judg": 3, "compute_episodic_return": [3, 8], "v_s_": 3, "v_": 3, "gamma": [3, 5, 12, 16], "99": 3, "gae_lambda": 3, "95": [3, 10], "estim": [3, 5, 8], "1506": 3, "02438": 3, "equival": [3, 5, 9], "td": 3, "mind": 3, "mark": 3, "recogn": 3, "tell": 3, "locat": [3, 16], "discount": [3, 12], "factor": [3, 5, 12], "bsz": [3, 5], "compute_nstep_return": [3, 8], "target_q_fn": 3, "rew_norm": 3, "batchwithreturnsprotocol": 3, "g_t": [3, 12], "d_i": 3, "r_i": 3, "d_": 3, "q_": 3, "s_": [3, 12], "d_t": 3, "randompolici": [3, 16], "legal": [3, 11, 16], "actbatchprotocol": 3, "unavail": 3, "noth": [3, 5, 11, 15], "dqnpolici": [3, 8, 13, 16], "discount_factor": [3, 13], "estimation_step": [3, 13], "target_update_freq": [3, 13, 16], "reward_norm": 3, "is_doubl": 3, "clip_loss_grad": 3, "deep": [3, 8, 9, 11], "1312": 3, "5602": 3, "doubl": [3, 8], "1509": [3, 13], "06461": 3, "duel": [3, 5, 8], "06581": 3, "side": 3, "look": [3, 12, 16], "ahead": 3, "frequenc": [3, 11], "nature14236": [3, 13], "huber": 3, "mse": 3, "rate": [3, 5, 16], "schedul": [3, 5], "adjust": [3, 11], "set_ep": [3, 13, 16], "epsilon": [3, 5, 12, 13], "greedi": [3, 12], "sync_weight": 3, "compute_q_valu": 3, "modeloutputbatchprotocol": 3, "three": [3, 5, 6, 9, 11, 12, 13, 16], "demonstr": [3, 13], "branchingdqnpolici": [3, 5, 8], "branchingnet": [3, 5], "branch": [3, 5, 8], "dual": [3, 5], "1711": [3, 5], "08946": [3, 5], "bdq": 3, "c51polici": [3, 8], "num_atom": [3, 5], "51": 3, "v_min": 3, "10": [3, 5, 10, 11, 12, 13, 16], "v_max": 3, "06887": 3, "atom": 3, "smallest": 3, "largest": 3, "rainbowpolici": [3, 8], "rainbow": [3, 8, 10], "1710": 3, "02298": 3, "qrdqnpolici": [3, 8], "num_quantil": 3, "200": [3, 10, 13], "quantil": [3, 5, 8], "regress": [3, 8], "10044": 3, "midpoint": 3, "cumul": 3, "iqnpolici": [3, 8], "32": 3, "online_sample_s": 3, "target_sample_s": 3, "implicit": [3, 5, 8], "1806": 3, "06923": 3, "evalu": [3, 4, 5, 10, 12, 13], "quantileregressionbatchprotocol": 3, "fqfpolici": [3, 8], "fullquantilefunct": [3, 5], "fraction_model": 3, "fractionproposalnetwork": [3, 5], "fraction_optim": 3, "num_fract": [3, 5], "ent_coef": 3, "fulli": [3, 8], "parameter": [3, 5, 8], "1911": 3, "02140": 3, "propos": [3, 5], "fraction": [3, 5], "entropi": [3, 5], "fqfbatchprotocol": 3, "pgpolici": [3, 8, 12], "dist_fn": 3, "deterministic_ev": 3, "simpli": [3, 8, 9, 12, 13], "squash": 3, "now": [3, 5, 9, 16], "mandatori": 3, "determinist": [3, 8], "stochast": 3, "mont": 3, "carlo": 3, "field": [3, 13], "distbatchprotocol": 3, "actor": [3, 5, 8, 11], "Will": [3, 5], "repres": [3, 9, 16], "contrari": [3, 13], "inplac": [3, 13], "repeat": [3, 4], "npgpolici": [3, 8], "critic": [3, 5, 8, 9, 11], "advantage_norm": 3, "optim_critic_it": 3, "actor_step_s": 3, "a2cpolici": [3, 8], "natur": [3, 8, 9, 13], "http": [3, 5, 6, 8, 10, 13, 16], "proceed": [3, 13], "neurip": 3, "cc": 3, "2001": 3, "4b86abe48d358ecf194c56c69108433": 3, "pdf": 3, "per": [3, 4, 8, 13, 16], "mini": [3, 4, 9], "param": [3, 4, 5], "max_batchs": 3, "gae": [3, 8, 12], "larg": [3, 4, 11], "possibl": [3, 9, 16], "constraint": 3, "256": 3, "batchwithadvantagesprotocol": 3, "vf_coef": 3, "max_grad_norm": 3, "1602": 3, "01783": 3, "back": [3, 13], "propag": 3, "trpopolici": [3, 8], "max_kl": 3, "backtrack_coeff": 3, "max_backtrack": 3, "trust": [3, 8], "region": [3, 8], "1502": 3, "05477": 3, "max": [3, 5, 10, 12], "kl": 3, "diverg": 3, "constrain": [3, 8], "multipli": 3, "met": 3, "backtrack": 3, "linesearch": 3, "ppopolici": [3, 5, 8], "eps_clip": 3, "dual_clip": 3, "value_clip": 3, "recompute_advantag": 3, "proxim": [3, 8, 13], "06347": [3, 13], "l_": 3, "mention": 3, "1912": 3, "09729": 3, "equ": 3, "constant": 3, "lower": 3, "1811": 3, "02553v3": 3, "sec": 3, "recomput": 3, "org": [3, 5, 13, 16], "2006": 3, "05990": 3, "logpoldprotocol": 3, "ddpgpolici": [3, 8], "actor_optim": 3, "critic_optim": 3, "005": 3, "02971": [3, 13], "set_exp_nois": 3, "actor_old": 3, "td3polici": [3, 8], "critic1": 3, "critic1_optim": 3, "critic2": 3, "critic2_optim": 3, "policy_nois": 3, "update_actor_freq": 3, "noise_clip": 3, "td3": [3, 10], "1802": 3, "09477": 3, "sacpolici": [3, 8], "1812": 3, "05905": 3, "regular": [3, 8], "target_entropi": 3, "log_alpha": 3, "alpha_optim": 3, "tune": 3, "solv": 3, "hard": 3, "problem": [3, 9, 11], "distlogprobbatchprotocol": 3, "redqpolici": [3, 8], "critics_optim": 3, "ensemble_s": [3, 5], "subset_s": 3, "actor_delai": 3, "20": [3, 10, 12], "target_mod": 3, "min": 3, "redq": 3, "2101": 3, "05982": 3, "ensembl": [3, 5, 8], "sub": [3, 9, 11], "integr": [3, 8], "averag": [3, 4, 5, 10, 13], "discretesacpolici": [3, 8], "sac": [3, 10], "1910": 3, "07207": 3, "imitationpolici": [3, 8], "ag": 3, "bcqpolici": [3, 8], "vae": [3, 5], "vae_optim": 3, "lmbda": 3, "75": [3, 10], "forward_sampled_tim": 3, "100": [3, 5, 11, 13], "num_sampled_act": 3, "bcq": [3, 5, 12], "02900": 3, "perturb": [3, 5], "union": [3, 5], "cqlpolici": [3, 8], "actorprob": [3, 5, 11], "cql_alpha_lr": 3, "0001": 3, "cql_weight": 3, "temperatur": 3, "with_lagrang": 3, "lagrange_threshold": 3, "min_act": 3, "max_act": [3, 5], "num_repeat_act": 3, "alpha_min": 3, "alpha_max": 3, "1000000": 3, "clip_grad": 3, "cql": 3, "04779": 3, "cql_log_alpha": 3, "1e": [3, 13, 16], "lagrang": 3, "exp": 3, "cql_alpha": 3, "upper": 3, "1e6": [3, 12, 13], "actor_pr": 3, "calc_actor_loss": 3, "calc_pi_valu": 3, "obs_pi": 3, "obs_to_pr": 3, "calc_random_valu": 3, "td3bcpolici": [3, 8], "bc": 3, "2106": 3, "06860": 3, "rel": [3, 9], "behavior": [3, 8, 9], "clone": [3, 8], "discretebcqpolici": [3, 8], "8000": [3, 6, 10], "eval_ep": 3, "001": 3, "unlikely_action_threshold": 3, "imitation_logits_penalti": 3, "01708": 3, "q_valu": 3, "imitation_logit": 3, "threshold": [3, 13], "unlik": [3, 8], "shown": 3, "17": [3, 10, 13], "imitationbatchprotocol": 3, "discretecqlpolici": [3, 8], "min_q_weight": 3, "conserv": [3, 8], "discretecrrpolici": [3, 8], "policy_improvement_mod": 3, "ratio_upper_bound": 3, "15134": 3, "f": [3, 4, 5, 9, 12, 13, 16], "denomin": 3, "gailpolici": [3, 8], "expert_buff": 3, "disc_net": 3, "disc_optim": 3, "disc_update_num": 3, "adversari": [3, 8], "1606": 3, "03476": 3, "expert": 3, "discrimin": 3, "dim": [3, 5, 12], "plu": 3, "grad": 3, "02553": 3, "disc": 3, "psrlpolici": [3, 8], "trans_count_prior": 3, "rew_mean_prior": 3, "rew_std_prior": 3, "add_done_loop": 3, "posterior": [3, 8], "stren": 3, "m": 3, "bayesian": 3, "framework": [3, 8, 11, 12], "icml": 3, "2000": 3, "943": 3, "950": 3, "dirichlet": 3, "prior": 3, "n_state": 3, "n_action": 3, "deviat": [3, 5], "precis": 3, "mdp": 3, "psrl": 3, "icmpolici": [3, 8], "intrinsiccuriositymodul": [3, 5], "lr_scale": 3, "reward_scal": 3, "forward_loss_weight": 3, "intrins": [3, 5, 8], "curios": [3, 5, 8], "1705": [3, 5], "05363": [3, 5], "icm": 3, "inner": 3, "multiagentpolicymanag": 3, "pettingzooenv": [3, 16], "dispatch": [3, 16], "feed": [3, 4, 13], "them": [3, 4, 5, 9, 11], "figur": [3, 9, 11, 16], "better": [3, 4, 7, 10], "replace_polici": 3, "replac": 3, "dimension": [3, 9], "save_rew": 3, "afterward": [3, 5], "onto": 3, "agent_1": 3, "agent_2": 3, "content": [3, 9], "xxx": 3, "agent_n": 3, "item1": 3, "item": [3, 5, 9, 12, 16], "item2": 3, "onpolicytrain": [4, 5, 12], "max_epoch": [4, 13], "train_collector": [4, 5, 13, 16], "collector": [4, 5, 14, 16], "step_per_epoch": [4, 13, 16], "repeat_per_collect": 4, "episode_per_test": [4, 13], "update_per_step": [4, 13, 16], "step_per_collect": [4, 13, 16], "episode_per_collect": 4, "train_fn": [4, 13, 16], "test_fn": [4, 13, 16], "stop_fn": [4, 13, 16], "save_best_fn": [4, 16], "save_checkpoint_fn": [4, 5, 11, 15], "resume_from_log": [4, 11], "reward_metr": [4, 16], "logger": [4, 5, 13, 15, 16], "baselogg": [4, 5], "lazylogg": [4, 5], "verbos": 4, "show_progress": 4, "test_in_train": [4, 16], "save_fn": 4, "basetrain": 4, "onpolici": 4, "yield": 4, "epoch": [4, 5, 11, 12, 13, 15, 16], "stat": [4, 5, 11], "epoch_stat": [4, 12], "do_something_with_polici": [4, 12], "query_something_about_polici": [4, 12], "make_a_plot_with": [4, 12], "metric": [4, 10, 15, 16], "gather_info": 4, "trainer1": [4, 12], "trainer2": [4, 12], "result1": [4, 12], "result2": [4, 12], "zip": [4, 12], "compare_result": [4, 12], "go": [4, 9, 11, 12, 13], "twice": 4, "would": [4, 11, 13, 16], "repeatedli": 4, "hook": [4, 5, 11], "custom": [4, 5, 8, 12], "signatur": 4, "num_epoch": 4, "step_idx": 4, "undiscount": [4, 13], "phase": 4, "previous": 4, "checkpoint": [4, 11, 15], "env_step": [4, 5, 13, 15, 16], "gradient_step": [4, 5, 15], "whatev": 4, "resum": [4, 5, 15, 16], "metadata": [4, 5], "tensorboard": [4, 5, 8, 11, 13, 15, 16], "mean_reward": [4, 13, 16], "boolean": [4, 9, 11, 13, 16], "num_episod": 4, "agent_num": 4, "monitor": [4, 16], "anyth": 4, "progress": [4, 5, 16], "bar": [4, 5, 16], "policy_update_fn": 4, "offpolicytrain": [4, 12, 16], "offpolici": 4, "just": [4, 9, 11, 16], "document": [4, 5, 8, 9, 11, 12, 15, 16], "meth": 4, "stand": [4, 5], "step_count": 4, "offlinetrain": [4, 12], "test_episod": [4, 13], "global_step": 4, "simpl": [4, 5, 9, 11, 12, 13], "wrapper": [4, 5, 11, 12, 13, 16], "start_tim": 4, "best_reward": [4, 13], "best_reward_std": 4, "gather": [4, 11], "train_step": [4, 13], "train_episod": [4, 13], "train_tim": [4, 13], "model": [4, 5, 12, 13, 15, 16], "train_spe": [4, 13], "speed": [4, 8, 11], "test_step": [4, 13], "test_tim": [4, 13], "test_spe": [4, 13], "best": [4, 9, 10, 16], "durat": [4, 11, 13], "elaps": 4, "packag": 5, "movavg": 5, "exclud": 5, "infin": 5, "nan": 5, "66": [5, 10], "2f": 5, "50": [5, 10, 16], "12": [5, 10, 12], "data_arrai": 5, "python": [5, 6, 8, 9, 11, 13, 16], "clip_max": 5, "1920928955078125e": 5, "07": 5, "en": [5, 8], "wikipedia": 5, "wiki": 5, "algorithms_for_calculating_vari": 5, "parallel_algorithm": 5, "absolut": 5, "avoid": 5, "divis": 5, "norm": 5, "rm": 5, "var": 5, "count": 5, "dummytqdm": 5, "tqdm": 5, "__enter__": 5, "__exit__": 5, "set_postfix": 5, "trainer": [5, 8, 11, 14, 15, 16], "config": [5, 13], "infinit": 5, "discuss": [5, 9, 11], "641": 5, "train_interv": 5, "1000": [5, 10, 12, 13, 16], "test_interv": 5, "update_interv": 5, "compat": [5, 9, 11], "try": [5, 12, 13, 16], "writer": [5, 13, 15, 16], "log_train_data": 5, "log_test_data": 5, "log_update_data": 5, "step_typ": 5, "namespac": [5, 9, 16], "belong": [5, 9], "ordin": 5, "collect_result": [5, 13], "stage": 5, "being": [5, 16], "update_result": 5, "save_data": 5, "restore_data": 5, "occur": [5, 8, 9, 11], "recov": 5, "tensorboardlogg": [5, 11, 13, 16], "summarywrit": [5, 13, 15, 16], "save_interv": [5, 11, 15], "write_flush": 5, "reli": 5, "visual": [5, 12, 15], "flush": 5, "add_scalar": 5, "basiclogg": 5, "name": [5, 11, 16], "427": 5, "placehold": [5, 9], "wandblogg": 5, "project": 5, "entiti": 5, "run_id": [5, 15], "monitor_gym": 5, "bias": 5, "wandb": [5, 10, 15], "ai": [5, 10], "panel": 5, "plot": [5, 10], "select": [5, 11, 12, 16], "log_path": [5, 15, 16], "w": [5, 8, 15], "team": 5, "organ": 5, "argpars": [5, 16], "deprec": 5, "msg": 5, "warn": [5, 6], "scheduler1": 5, "constantlr": 5, "opt1": 5, "total_it": 5, "scheduler2": 5, "exponentiallr": 5, "opt2": 5, "net": [5, 11, 13, 16], "miniblock": 5, "input_s": 5, "output_s": 5, "norm_lay": 5, "norm_arg": 5, "activ": [5, 13, 16], "act_arg": 5, "linear_lay": 5, "linear": [5, 13], "construct": [5, 11, 12, 13, 16], "layer": [5, 16], "mlp": [5, 13], "input_dim": 5, "output_dim": 5, "hidden_s": [5, 16], "relu": [5, 13, 16], "flatten_input": 5, "backbon": 5, "final": [5, 11, 12, 16], "layernorm": 5, "batchnorm1d": 5, "flatten": 5, "although": [5, 11, 16], "recip": 5, "regist": 5, "silent": 5, "ignor": [5, 9, 12], "netbas": 5, "state_shap": [5, 13, 16], "action_shap": [5, 11, 12, 13, 16], "softmax": 5, "concat": 5, "dueling_param": 5, "drl": [5, 14], "build": [5, 8, 14, 16], "expand": 5, "dqn": [5, 8, 10, 12, 13, 15, 16], "suggest": [5, 12], "recurr": [5, 8, 11], "layer_num": 5, "hidden_layer_s": 5, "128": [5, 13, 16], "lstm": 5, "recurrentstatebatch": 5, "comment": 5, "cell": [5, 16], "actorcrit": 5, "pars": 5, "actor_crit": 5, "449": 5, "dataparallelnet": [5, 11], "dataparallel": 5, "gpu": [5, 8, 10], "convers": 5, "nest": [5, 8, 9, 11], "ensemblelinear": 5, "in_featur": 5, "out_featur": 5, "bia": 5, "subnet": 5, "num_branch": 5, "action_per_branch": 5, "common_hidden_s": 5, "value_hidden_s": 5, "action_hidden_s": 5, "allow": [5, 13, 16], "r": [5, 11], "action_peer_branch": 5, "get_dict_state_decor": 5, "helper": [5, 9], "applic": [5, 9, 13], "decorator_fn": 5, "preprocess": 5, "preserv": 5, "present": 5, "new_state_shap": 5, "preprocess_net": 5, "softmax_output": 5, "preprocess_net_output_dim": 5, "last_siz": 5, "cosineembeddingnetwork": 5, "num_cosin": 5, "embedding_dim": 5, "cosin": 5, "embed": 5, "iqn": [5, 10], "convert": [5, 9, 11, 12], "github": [5, 8, 10], "com": [5, 8, 10], "ku2482": 5, "fqf": [5, 10], "qrdqn": 5, "pytorch": [5, 8, 9, 13], "blob": 5, "master": [5, 8, 10], "fqf_iqn_qrdqn": 5, "implicitquantilenetwork": 5, "64": [5, 10, 12, 13, 16], "action_dim": 5, "faction": 5, "adapt": 5, "obs_embed": 5, "full": [5, 9, 13], "quantiles_tau": 5, "tau_hat": 5, "propose_model": 5, "noisylinear": 5, "noisy_std": 5, "noisi": 5, "1706": [5, 10], "10295": 5, "featur": [5, 8, 9], "sample_nois": 5, "submodul": 5, "least": [5, 9, 12, 13], "feature_net": 5, "feature_dim": 5, "s1": 5, "s2": 5, "mse_loss": 5, "act_hat": 5, "unbound": 5, "conditioned_sigma": 5, "gauss": 5, "independ": 5, "recurrentactorprob": [5, 11], "recurrentcrit": [5, 11], "phi": 5, "05": [5, 11, 13, 16], "offlin": [5, 12], "offline_bcq": 5, "encod": [5, 16], "decod": 5, "hidden_dim": 5, "latent_dim": 5, "Its": 5, "state_dim": 5, "latent": 5, "latent_z": 5, "edit": 6, "pip": [6, 8, 15], "dev": 6, "directori": 6, "remov": 6, "setup": [6, 16], "uninstal": 6, "commit": 6, "flake8": 6, "lint": 6, "isort": 6, "yapf": 6, "codestyl": 6, "mypi": 6, "annot": [6, 9], "command": [6, 8], "pytest": 6, "click": 6, "button": 6, "repo": 6, "green": 6, "top": 6, "html": 6, "push": 6, "git": [6, 8], "doc": 6, "restructuredtext": 6, "rst": 6, "tutori": [6, 9, 11, 12, 13, 14, 16], "sphinx": 6, "outlin": 6, "compil": 6, "webpag": 6, "_build": 6, "browser": 6, "chines": 6, "readthedoc": [6, 8], "io": [6, 8], "zh": [6, 8], "latest": [6, 15], "pydocstyl": 6, "docstr": 6, "doc8": 6, "front": 6, "docstyl": 6, "welcom": 7, "contribut": [7, 8], "tianshou": [7, 9, 10, 11, 13, 14, 15, 16], "below": [7, 9, 10, 11, 13, 16], "incomplet": 7, "jiayi": 7, "weng": 7, "trinkle23897": 7, "alexi": 7, "duburcq": 7, "duburcqa": 7, "kaichao": 7, "youkaichao": 7, "huayu": 7, "chen": 7, "chendrag": 7, "yi": 7, "su": 7, "nuance1979": 7, "\u5929\u6388": 8, "platform": 8, "pure": [8, 12], "librari": [8, 13, 16], "tensorflow": 8, "unfriendli": 8, "slow": [8, 11], "twin": 8, "delai": 8, "imit": 8, "prioritizedreplaybuff": [8, 12], "herreplaybuff": 8, "eleg": 8, "3000": 8, "art": [8, 10], "mujoco": [8, 11], "benchmark": 8, "parallel": [8, 13], "super": [8, 13], "envpool": [8, 13], "represent": [8, 13], "pomdp": 8, "nstep": 8, "veri": [8, 9, 12], "thank": 8, "numba": 8, "jit": 8, "tool": 8, "comprehens": 8, "unit": [8, 13], "pipelin": [8, 13], "pep8": 8, "\u4e2d\u6587\u6587\u6863\u4f4d\u4e8e": 8, "host": [8, 10, 15], "pypi": 8, "conda": 8, "forg": 8, "anaconda": 8, "miniconda": 8, "through": [8, 11, 12, 13], "newest": 8, "ml": [8, 10], "upgrad": 8, "open": [8, 12], "consol": 8, "__version__": 8, "successfulli": [8, 11, 13], "still": [8, 9, 11], "develop": [8, 11], "stabl": 8, "jupyt": 8, "notebook": 8, "cheat": [8, 13], "sheet": [8, 13], "util": [8, 11, 13, 15, 16], "contributor": 8, "search": 8, "extens": 9, "explain": [9, 11], "hierarchi": 9, "suppos": 9, "four": [9, 11, 13, 16], "t1": 9, "t2": 9, "t3": 9, "t4": 9, "name1": 9, "name2": 9, "name3": 9, "name4": 9, "name0": 9, "That": [9, 16], "li": 9, "describ": [9, 12, 16], "There": [9, 12, 13, 16], "virtual": [9, 16], "root": 9, "mostli": 9, "camera": 9, "combin": 9, "sensori": 9, "beyond": 9, "togeth": 9, "easi": [9, 13, 16], "direct": 9, "point_3d": 9, "forc": 9, "cover": 9, "too": 9, "definit": [9, 13], "hello": 9, "bool_": 9, "int32": 9, "shouldn": 9, "mix": 9, "long": [9, 12, 16], "besid": 9, "neither": 9, "nor": 9, "snippet": [9, 11, 12, 13], "ok": 9, "2312312": [9, 12], "world": 9, "work": [9, 11, 12], "fine": 9, "chain": 9, "key1": 9, "key2": 9, "key3": 9, "obj": 9, "like": [9, 11, 13, 16], "mechan": 9, "arithmet": 9, "amazingli": 9, "25": 9, "intuit": [9, 11, 16], "stick": 9, "homogen": 9, "data_1": 9, "data_2": 9, "data_split": 9, "data_cat": 9, "focus": 9, "know": 9, "until": [9, 11], "tensor1": 9, "tensor2": 9, "key4": 9, "key5": 9, "eventu": 9, "introduct": 9, "rise": [9, 11], "achiev": [9, 13], "decid": 9, "identifi": [9, 13], "confus": 9, "variant": 9, "commun": 9, "regard": 9, "Then": [9, 11, 15], "readili": 9, "seem": [9, 16], "bit": 9, "ambigu": 9, "shortest": 9, "strongli": [9, 12], "recommend": [9, 11, 12], "typeerror": 9, "convent": [9, 13], "scientif": 9, "undetermin": 9, "Or": 9, "somewhat": 9, "treat": [9, 11], "talk": 9, "pictur": 9, "script": [9, 11, 12, 13, 15, 16], "miss": 9, "let": [9, 12, 13, 16], "rethink": 9, "purpos": 9, "a1": 9, "a2": 9, "sai": 9, "keyn": 9, "express": 9, "satisfi": 9, "bi": 9, "serializ": 9, "therefor": 9, "pickl": [9, 12], "disk": [9, 16], "especi": 9, "to_torch": 9, "to_numpi": [9, 13], "float32": 9, "frequent": 9, "alia": 9, "cautiou": 9, "conduct": [10, 14], "10m": 10, "tabl": 10, "compar": 10, "against": [10, 11, 16], "publish": 10, "1m": 10, "approxim": [10, 13], "quantit": 10, "baselin": [10, 11], "highlight": 10, "boldfac": 10, "referenc": 10, "acktr": 10, "spin": 10, "ant": 10, "halfcheetah": 10, "hopper": 10, "walker2d": 10, "swimmer": 10, "humanoid": 10, "reacher": 10, "ipendulum": 10, "idpendulum": 10, "990": 10, "11718": 10, "2197": 10, "1400": 10, "144": 10, "177": 10, "8364": 10, "1005": 10, "3305": 10, "2020": 10, "1843": 10, "9355": 10, "888": 10, "8577": 10, "1860": 10, "3098": 10, "8370": 10, "840": 10, "11000": 10, "1800": 10, "1950": 10, "137": 10, "5116": 10, "10201": 10, "3472": 10, "3982": 10, "104": 10, "5189": 10, "9349": 10, "4372": 10, "9637": 10, "3564": 10, "4682": 10, "9337": 10, "3800": 10, "9750": 10, "2860": 10, "4000": 10, "78": 10, "5850": 10, "12138": 10, "3542": 10, "5007": 10, "44": 10, "5488": 10, "9359": 10, "3720": 10, "10400": 10, "3370": 10, "3740": 10, "5200": 10, "655": 10, "2347": 10, "2996": 10, "1283": 10, "8487": 10, "3980": 10, "11520": 10, "3150": 10, "4250": 10, "41": 10, "a2c": 10, "3485": 10, "1829": 10, "1253": 10, "1091": 10, "36": 10, "1726": 10, "9257": 10, "900": 10, "850": 10, "31": 10, "24": 10, "7100": 10, "tr": 10, "930": 10, "1220": 10, "700": [10, 11], "27": 10, "8100": 10, "3258": 10, "5783": 10, "2609": 10, "3588": 10, "787": 10, "9231": 10, "2330": 10, "3460": 10, "108": 10, "1083": 10, "1795": 10, "2164": 10, "3317": 10, "8977": 10, "1700": 10, "2400": 10, "3510": 10, "111": 10, "940": 10, "7350": 10, "650": 10, "1670": 10, "1850": 10, "1230": 10, "120": 10, "trpo": 10, "2866": 10, "4471": 10, "2046": 10, "3826": 10, "40": [10, 12], "810": 10, "8435": 10, "400": [10, 13], "550": 10, "800": 10, "2100": 10, "1100": 10, "121": [10, 11], "115": 10, "2471": 10, "2321": 10, "985": 10, "205": 10, "1350": 10, "2200": 10, "2350": 10, "910": 10, "7000": 10, "tf": 10, "150": 10, "1200": 10, "600": 10, "85": 10, "runtim": 10, "obtain": 10, "nvidia": 10, "titan": 10, "48": 10, "core": [10, 11], "thread": [10, 13], "9h": 10, "80": 10, "3h": 10, "11": [10, 12], "81": 10, "2h": 10, "83": 10, "4min": 10, "84": 10, "16": [10, 12, 13], "7min": 10, "62": 10, "28": 10, "24min": 10, "npg": 10, "65": [10, 12, 13], "26": 10, "reliabl": 10, "report": 10, "vmlldzoxota1nza5": 10, "googl": [10, 14], "dopamin": 10, "pong": 10, "breakout": 10, "enduro": 10, "qbert": 10, "mspacman": 10, "seaquest": 10, "spaceinvad": 10, "133": 10, "997": 10, "180": 10, "11620": 10, "786": 10, "2324": 10, "359": 10, "3213": 10, "381": 10, "947": 10, "155": 10, "92": 10, "2126": 10, "6836": 10, "2451": 10, "1406": 10, "1559": 10, "131": 10, "479": 10, "3254": 10, "1164": 10, "1129": 10, "145": 10, "c51": 10, "412": 10, "35": [10, 13], "12513": 10, "1274": 10, "2254": 10, "201": 10, "1524": 10, "557": 10, "222": 10, "665": 10, "9924": 10, "604": 10, "157": 10, "440": 10, "1496": 10, "112": 10, "14224": 10, "2524": 10, "338": 10, "1934": 10, "376": 10, "1178": 10, "19": [10, 11, 12], "47": 10, "2185": 10, "15682": 10, "3161": 10, "3328": 10, "459": 10, "355": 10, "22": 10, "1252": 10, "118": 10, "14409": 10, "808": 10, "2228": 10, "253": 10, "5341": 10, "670": 10, "667": 10, "96": 10, "1227": 10, "12496": 10, "4422": 10, "16418": 10, "1358": 10, "267": 10, "283": 10, "74": 10, "1098": 10, "110": 10, "12341": 10, "1760": 10, "1699": 10, "248": 10, "1035": 10, "353": 10, "1641": 10, "13": [10, 12], "114": 10, "350": 10, "7012": 10, "1218": 10, "1787": 10, "340": 10, "qr": 10, "228": 10, "951": 10, "333": 10, "14761": 10, "862": 10, "2259": 10, "269": 10, "4187": 10, "725": 10, "1114": 10, "116": 10, "382": 10, "29": 10, "1816": 10, "314": 10, "15301": 10, "684": 10, "2506": 10, "402": 10, "8051": 10, "3155": 10, "2558": 10, "comparison": [10, 11], "NOT": 10, "prove": 10, "hyperparamet": [10, 13, 16], "strictli": 10, "unfair": 10, "lastli": 10, "fewer": 10, "scenario": [11, 13], "resolv": 11, "gymnasium": [11, 13, 16], "univers": 11, "solut": [11, 15], "processor": 11, "vectorenvwrapp": 11, "well": [11, 12, 13, 16], "relat": [11, 12], "349": 11, "everyth": 11, "And": 11, "checkout": 11, "test_c51": 11, "test_ppo": 11, "test_discrete_bcq": 11, "python3": 11, "tfevent": 11, "highli": 11, "reason": 11, "overlap": 11, "dummyvectorenv": [11, 12, 13, 16], "pseudo": 11, "subprocvectorenv": [11, 13], "shmemvectorenv": [11, 13], "footprint": 11, "imag": [11, 16], "rayvectorenv": [11, 13], "machin": [11, 13], "who": [11, 16], "upon": 11, "mytestenv": 11, "whichev": 11, "roughli": 11, "lot": 11, "90": 11, "lag": 11, "behind": 11, "103": 11, "idea": 11, "built": 11, "ready_id": 11, "among": 11, "faster": 11, "immedi": 11, "atari": [11, 12], "vizdoom": 11, "toy_text": 11, "classic_control": 11, "instal": [11, 15], "pip3": 11, "make_gymnasium": [11, 13], "cartpol": [11, 12, 13, 14], "v0": [11, 12, 13, 14], "num_env": [11, 13], "preproces_fn": 11, "six": 11, "intend": 11, "track": [11, 13, 15], "dequ": 11, "myprocessor": 11, "episode_log": 11, "main_log": 11, "maxlen": 11, "append": 11, "test_processor": 11, "mywrapp": 11, "vectorenvnormob": 11, "vectorreplaybuff": [11, 12, 13, 16], "buf": [11, 12], "ye": 11, "approach": 11, "complet": [11, 12], "As": [11, 12], "cuda": [11, 16], "charg": 11, "38": [11, 12, 13], "69": 11, "fetchreach": 11, "v1": 11, "34183265e": 11, "00": 11, "49100387e": 11, "34722720e": 11, "97805133e": 11, "04": 11, "15193042e": 11, "73933014e": 11, "06": 11, "51992816e": 11, "08": 11, "42927453e": 11, "73325650e": 11, "28455228e": 11, "34183265": 11, "74910039": 11, "53472272": 11, "24073906": 11, "77753463": 11, "63457791": 11, "42154265": 11, "62505137": 11, "62929863": 11, "00000000e": 11, "networkx": 11, "nx": 11, "graph": 11, "0x7f5c607826a0": 11, "distinct": 11, "deepcopi": [11, 16], "goe": 11, "With": [11, 16], "flexibl": [11, 12, 16], "minim": 11, "effort": 11, "paradigm": 11, "simultan": 11, "moba": 11, "cyclic": 11, "player": [11, 16], "turn": [11, 16], "condit": [11, 13], "condition": 11, "pig": 11, "address": 11, "tradit": 11, "formul": [11, 16], "num_ag": 11, "unifi": 11, "plai": [11, 16], "leav": 11, "illeg": 11, "next_stat": 11, "next_agent_id": 11, "next_mask": 11, "state_": 11, "essenti": [11, 16], "next_state_": 11, "tini": 11, "tic": 11, "tac": 11, "toe": 11, "flow": [12, 13], "dedic": 12, "read": 12, "infer": 12, "illustr": 12, "pkl": 12, "dump": 12, "wb": 12, "buf2": 12, "14": 12, "meanwhil": 12, "chronolog": 12, "batch_data": 12, "rb": 12, "frame_stack": 12, "modal": 12, "ptr": 12, "ep_rew": 12, "ep_len": 12, "ep_idx": 12, "arang": 12, "ab": [12, 13], "timestamp": 12, "full_index": 12, "allclos": 12, "lose": [12, 16], "obviou": 12, "don": [12, 13], "seri": 12, "r_t": 12, "r_": 12, "max_a": 12, "pseudocod": 12, "10000": [12, 13], "compute_act": 12, "b_": 12, "b_a": 12, "b_s_": 12, "b_r": 12, "b_d": 12, "b_ret": 12, "compute_2_step_return": 12, "dqn_2step": 12, "buffer_len": 12, "batch_2": 12, "s_t": 12, "batch_2_ob": 12, "effeci": 12, "batchsiz": 12, "maxq": 12, "_gamma": 12, "wish": 12, "replay_buff": 12, "vec_buff": 12, "03": [12, 13], "asynccollector": 12, "due": 12, "honest": 12, "energi": 12, "onpolicy_train": [12, 13], "offpolicy_train": [12, 13], "off": [12, 13], "offline_train": [12, 13], "facilit": 12, "logic": 12, "far": [12, 16], "overal": [12, 13], "realli": 12, "isn": 12, "signific": 13, "success": 13, "variou": 13, "mk": 13, "pioneer": 13, "test_dqn": 13, "rllib": 13, "improv": 13, "itself": [13, 16], "sent": 13, "learner": 13, "system": 13, "environment_nam": 13, "cart": 13, "carri": 13, "pole": 13, "elig": 13, "lhp": 13, "posit": [13, 16], "veloc": 13, "angl": 13, "tip": 13, "degre": 13, "vertic": 13, "center": 13, "good": 13, "highest": 13, "train_env": [13, 16], "test_env": [13, 16], "multiprocess": 13, "pipe": 13, "concurr": 13, "block": [13, 14], "cours": 13, "compli": 13, "prod": 13, "isinst": [13, 16], "adam": [13, 16], "lr": [13, 16], "swd": 13, "supervis": 13, "classif": 13, "hyper": 13, "320": [13, 16], "practic": 13, "worth": [13, 16], "notic": [13, 16], "prefer": 13, "20000": [13, 16], "summar": 13, "last_stat": 13, "ready_env_id": 13, "stop": 13, "spec": 13, "reward_threshold": 13, "record": 13, "9246": 13, "504": 13, "97": 13, "3518": 13, "79": 13, "49112": 13, "35600": 13, "52": 13, "199": 13, "fp": 13, "eval": [13, 16], "5000": 13, "break": 13, "volodymyr": 13, "mnih": 13, "korai": 13, "kavukcuoglu": 13, "david": 13, "silver": 13, "andrei": 13, "rusu": 13, "joel": 13, "veness": 13, "marc": 13, "bellemar": 13, "alex": 13, "grave": 13, "martin": 13, "riedmil": 13, "andrea": 13, "fidjeland": 13, "georg": 13, "ostrovski": 13, "stig": 13, "petersen": 13, "charl": 13, "beatti": 13, "amir": 13, "sadik": 13, "ioanni": 13, "antonogl": 13, "helen": 13, "king": 13, "dharshan": 13, "kumaran": 13, "daan": 13, "wierstra": 13, "shane": 13, "legg": 13, "demi": 13, "hassabi": 13, "518": 13, "7540": 13, "529": 13, "533": 13, "2015": 13, "url": 13, "doi": 13, "1038": 13, "timothi": 13, "p": 13, "lillicrap": 13, "jonathan": 13, "hunt": 13, "alexand": 13, "pritzel": 13, "nicola": 13, "heess": 13, "tom": 13, "erez": 13, "yuval": 13, "tassa": 13, "4th": 13, "confer": 13, "iclr": 13, "2016": 13, "san": 13, "juan": 13, "puerto": 13, "rico": 13, "john": 13, "schulman": 13, "filip": 13, "wolski": 13, "prafulla": 13, "dhariw": 13, "alec": 13, "radford": 13, "oleg": 13, "klimov": 13, "corr": 13, "2017": 13, "colaboratori": 14, "guid": 14, "collabor": 14, "l0": 14, "overview": 14, "l1": 14, "l2": 14, "l3": 14, "l4": 14, "l5": 14, "l6": 14, "l7": 14, "dashboard": 15, "local": 15, "join": [15, 16], "logdir": [15, 16], "add_text": [15, 16], "via": 15, "cloud": 15, "ckpt_path": 15, "artifact": 15, "download": 15, "test_psrl": 15, "atari_dqn": 15, "holder": 15, "pettingzoo": 16, "link": 16, "farama": 16, "beginn": 16, "oppon": 16, "offer": 16, "3x3": 16, "tictactoe_v3": 16, "board": 16, "row": 16, "col": 16, "win": 16, "_____": 16, "player_1": 16, "int8": 16, "player_2": 16, "plane": 16, "placement": 16, "similarli": 16, "swap": 16, "card": 16, "column": 16, "integ": 16, "rather": 16, "omit": 16, "familiar": 16, "alreadi": 16, "builtin": 16, "trajectori": 16, "statu": 16, "badli": 16, "smart": 16, "pettingzoo_env": 16, "defer": 16, "get_pars": 16, "argumentpars": 16, "parser": 16, "add_argu": 16, "1626": 16, "favor": 16, "earlier": 16, "freq": 16, "narg": 16, "num": 16, "watch": 16, "store_tru": 16, "is_avail": 16, "get_arg": 16, "parse_known_arg": 16, "get_ag": 16, "perceptron": 16, "agent_learn": 16, "agent_oppon": 16, "get_env": 16, "resume_path": 16, "opponent_path": 16, "prepar": 16, "train_ag": 16, "training_num": 16, "test_num": 16, "manual_se": 16, "buffer_s": 16, "tic_tac_to": 16, "callback": 16, "hasattr": 16, "model_save_path": 16, "win_rat": 16, "eps_train": 16, "eps_test": 16, "match": 16, "minut": 16, "role": 16, "pretti": 16, "trial": 16, "shell": 16, "test_tic_tac_to": 16, "awai": 16, "intellig": 16, "mayb": 16, "alphazero": 16, "yourself": 16}, "objects": {"tianshou.data": [[0, 0, 1, "", "AsyncCollector"], [0, 0, 1, "", "Batch"], [0, 0, 1, "", "CachedReplayBuffer"], [0, 0, 1, "", "Collector"], [0, 0, 1, "", "HERReplayBuffer"], [0, 0, 1, "", "HERReplayBufferManager"], [0, 0, 1, "", "HERVectorReplayBuffer"], [0, 0, 1, "", "PrioritizedReplayBuffer"], [0, 0, 1, "", "PrioritizedReplayBufferManager"], [0, 0, 1, "", "PrioritizedVectorReplayBuffer"], [0, 0, 1, "", "ReplayBuffer"], [0, 0, 1, "", "ReplayBufferManager"], [0, 0, 1, "", "SegmentTree"], [0, 0, 1, "", "VectorReplayBuffer"], [0, 3, 1, "", "to_numpy"], [0, 3, 1, "", "to_torch"], [0, 3, 1, "", "to_torch_as"]], "tianshou.data.AsyncCollector": [[0, 1, 1, "", "collect"], [0, 1, 1, "", "reset_env"]], "tianshou.data.Batch": [[0, 1, 1, "", "__getitem__"], [0, 1, 1, "", "__len__"], [0, 1, 1, "", "__setitem__"], [0, 1, 1, "", "cat"], [0, 1, 1, "", "cat_"], [0, 1, 1, "", "empty"], [0, 1, 1, "", "empty_"], [0, 1, 1, "", "is_empty"], [0, 2, 1, "", "shape"], [0, 1, 1, "", "split"], [0, 1, 1, "", "stack"], [0, 1, 1, "", "stack_"], [0, 1, 1, "", "to_numpy"], [0, 1, 1, "", "to_torch"], [0, 1, 1, "", "update"]], "tianshou.data.CachedReplayBuffer": [[0, 1, 1, "", "add"]], "tianshou.data.Collector": [[0, 1, 1, "", "collect"], [0, 1, 1, "", "reset"], [0, 1, 1, "", "reset_buffer"], [0, 1, 1, "", "reset_env"], [0, 1, 1, "", "reset_stat"]], "tianshou.data.HERReplayBuffer": [[0, 1, 1, "", "add"], [0, 1, 1, "", "reset"], [0, 1, 1, "", "rewrite_transitions"], [0, 1, 1, "", "sample_indices"], [0, 1, 1, "", "save_hdf5"], [0, 1, 1, "", "set_batch"], [0, 1, 1, "", "update"]], "tianshou.data.HERReplayBufferManager": [[0, 1, 1, "", "add"], [0, 1, 1, "", "save_hdf5"], [0, 1, 1, "", "set_batch"], [0, 1, 1, "", "update"]], "tianshou.data.PrioritizedReplayBuffer": [[0, 1, 1, "", "__getitem__"], [0, 1, 1, "", "add"], [0, 1, 1, "", "get_weight"], [0, 1, 1, "", "init_weight"], [0, 1, 1, "", "sample_indices"], [0, 1, 1, "", "set_beta"], [0, 1, 1, "", "update"], [0, 1, 1, "", "update_weight"]], "tianshou.data.PrioritizedVectorReplayBuffer": [[0, 1, 1, "", "set_beta"]], "tianshou.data.ReplayBuffer": [[0, 1, 1, "", "__getitem__"], [0, 1, 1, "", "__len__"], [0, 1, 1, "", "add"], [0, 1, 1, "", "from_data"], [0, 1, 1, "", "get"], [0, 1, 1, "", "load_hdf5"], [0, 1, 1, "", "next"], [0, 1, 1, "", "prev"], [0, 1, 1, "", "reset"], [0, 1, 1, "", "sample"], [0, 1, 1, "", "sample_indices"], [0, 1, 1, "", "save_hdf5"], [0, 1, 1, "", "set_batch"], [0, 1, 1, "", "unfinished_index"], [0, 1, 1, "", "update"]], "tianshou.data.ReplayBufferManager": [[0, 1, 1, "", "__len__"], [0, 1, 1, "", "add"], [0, 1, 1, "", "next"], [0, 1, 1, "", "prev"], [0, 1, 1, "", "reset"], [0, 1, 1, "", "sample_indices"], [0, 1, 1, "", "set_batch"], [0, 1, 1, "", "unfinished_index"], [0, 1, 1, "", "update"]], "tianshou.data.SegmentTree": [[0, 1, 1, "", "__getitem__"], [0, 1, 1, "", "__len__"], [0, 1, 1, "", "__setitem__"], [0, 1, 1, "", "get_prefix_sum_idx"], [0, 1, 1, "", "reduce"]], "tianshou.env": [[1, 0, 1, "", "BaseVectorEnv"], [1, 0, 1, "", "ContinuousToDiscrete"], [1, 0, 1, "", "DummyVectorEnv"], [1, 0, 1, "", "PettingZooEnv"], [1, 0, 1, "", "RayVectorEnv"], [1, 0, 1, "", "ShmemVectorEnv"], [1, 0, 1, "", "SubprocVectorEnv"], [1, 0, 1, "", "VectorEnvNormObs"], [1, 0, 1, "", "VectorEnvWrapper"]], "tianshou.env.BaseVectorEnv": [[1, 1, 1, "", "__len__"], [1, 1, 1, "", "close"], [1, 1, 1, "", "get_env_attr"], [1, 1, 1, "", "render"], [1, 1, 1, "", "reset"], [1, 1, 1, "", "seed"], [1, 1, 1, "", "set_env_attr"], [1, 1, 1, "", "step"]], "tianshou.env.ContinuousToDiscrete": [[1, 1, 1, "", "action"]], "tianshou.env.PettingZooEnv": [[1, 1, 1, "", "close"], [1, 1, 1, "", "render"], [1, 1, 1, "", "reset"], [1, 1, 1, "", "seed"], [1, 1, 1, "", "step"]], "tianshou.env.VectorEnvNormObs": [[1, 1, 1, "", "get_obs_rms"], [1, 1, 1, "", "reset"], [1, 1, 1, "", "set_obs_rms"], [1, 1, 1, "", "step"]], "tianshou.env.VectorEnvWrapper": [[1, 1, 1, "", "__len__"], [1, 1, 1, "", "close"], [1, 1, 1, "", "get_env_attr"], [1, 1, 1, "", "render"], [1, 1, 1, "", "reset"], [1, 1, 1, "", "seed"], [1, 1, 1, "", "set_env_attr"], [1, 1, 1, "", "step"]], "tianshou.env.worker": [[1, 0, 1, "", "DummyEnvWorker"], [1, 0, 1, "", "EnvWorker"], [1, 0, 1, "", "RayEnvWorker"], [1, 0, 1, "", "SubprocEnvWorker"]], "tianshou.env.worker.DummyEnvWorker": [[1, 1, 1, "", "close_env"], [1, 1, 1, "", "get_env_attr"], [1, 1, 1, "", "render"], [1, 1, 1, "", "reset"], [1, 1, 1, "", "seed"], [1, 1, 1, "", "send"], [1, 1, 1, "", "set_env_attr"], [1, 1, 1, "", "wait"]], "tianshou.env.worker.EnvWorker": [[1, 1, 1, "", "close"], [1, 1, 1, "", "close_env"], [1, 1, 1, "", "get_env_attr"], [1, 1, 1, "", "recv"], [1, 1, 1, "", "render"], [1, 1, 1, "", "reset"], [1, 1, 1, "", "seed"], [1, 1, 1, "", "send"], [1, 1, 1, "", "set_env_attr"], [1, 1, 1, "", "step"], [1, 1, 1, "", "wait"]], "tianshou.env.worker.RayEnvWorker": [[1, 1, 1, "", "close_env"], [1, 1, 1, "", "get_env_attr"], [1, 1, 1, "", "recv"], [1, 1, 1, "", "render"], [1, 1, 1, "", "reset"], [1, 1, 1, "", "seed"], [1, 1, 1, "", "send"], [1, 1, 1, "", "set_env_attr"], [1, 1, 1, "", "wait"]], "tianshou.env.worker.SubprocEnvWorker": [[1, 1, 1, "", "close_env"], [1, 1, 1, "", "get_env_attr"], [1, 1, 1, "", "recv"], [1, 1, 1, "", "render"], [1, 1, 1, "", "reset"], [1, 1, 1, "", "seed"], [1, 1, 1, "", "send"], [1, 1, 1, "", "set_env_attr"], [1, 1, 1, "", "wait"]], "tianshou": [[2, 4, 0, "-", "exploration"], [5, 4, 0, "-", "utils"]], "tianshou.exploration": [[2, 0, 1, "", "BaseNoise"], [2, 0, 1, "", "GaussianNoise"], [2, 0, 1, "", "OUNoise"]], "tianshou.exploration.BaseNoise": [[2, 1, 1, "", "__call__"], [2, 1, 1, "", "reset"]], "tianshou.exploration.GaussianNoise": [[2, 1, 1, "", "__call__"]], "tianshou.exploration.OUNoise": [[2, 1, 1, "", "__call__"], [2, 1, 1, "", "reset"]], "tianshou.policy": [[3, 0, 1, "", "A2CPolicy"], [3, 0, 1, "", "BCQPolicy"], [3, 0, 1, "", "BasePolicy"], [3, 0, 1, "", "BranchingDQNPolicy"], [3, 0, 1, "", "C51Policy"], [3, 0, 1, "", "CQLPolicy"], [3, 0, 1, "", "DDPGPolicy"], [3, 0, 1, "", "DQNPolicy"], [3, 0, 1, "", "DiscreteBCQPolicy"], [3, 0, 1, "", "DiscreteCQLPolicy"], [3, 0, 1, "", "DiscreteCRRPolicy"], [3, 0, 1, "", "DiscreteSACPolicy"], [3, 0, 1, "", "FQFPolicy"], [3, 0, 1, "", "GAILPolicy"], [3, 0, 1, "", "ICMPolicy"], [3, 0, 1, "", "IQNPolicy"], [3, 0, 1, "", "ImitationPolicy"], [3, 0, 1, "", "MultiAgentPolicyManager"], [3, 0, 1, "", "NPGPolicy"], [3, 0, 1, "", "PGPolicy"], [3, 0, 1, "", "PPOPolicy"], [3, 0, 1, "", "PSRLPolicy"], [3, 0, 1, "", "QRDQNPolicy"], [3, 0, 1, "", "REDQPolicy"], [3, 0, 1, "", "RainbowPolicy"], [3, 0, 1, "", "RandomPolicy"], [3, 0, 1, "", "SACPolicy"], [3, 0, 1, "", "TD3BCPolicy"], [3, 0, 1, "", "TD3Policy"], [3, 0, 1, "", "TRPOPolicy"]], "tianshou.policy.A2CPolicy": [[3, 1, 1, "", "learn"], [3, 1, 1, "", "process_fn"]], "tianshou.policy.BCQPolicy": [[3, 1, 1, "", "forward"], [3, 1, 1, "", "learn"], [3, 1, 1, "", "sync_weight"], [3, 1, 1, "", "train"]], "tianshou.policy.BasePolicy": [[3, 1, 1, "", "compute_episodic_return"], [3, 1, 1, "", "compute_nstep_return"], [3, 1, 1, "", "exploration_noise"], [3, 1, 1, "", "forward"], [3, 1, 1, "", "learn"], [3, 1, 1, "", "map_action"], [3, 1, 1, "", "map_action_inverse"], [3, 1, 1, "", "post_process_fn"], [3, 1, 1, "", "process_fn"], [3, 1, 1, "", "set_agent_id"], [3, 1, 1, "", "soft_update"], [3, 1, 1, "", "update"], [3, 1, 1, "", "value_mask"]], "tianshou.policy.BranchingDQNPolicy": [[3, 1, 1, "", "exploration_noise"], [3, 1, 1, "", "forward"], [3, 1, 1, "", "learn"], [3, 1, 1, "", "process_fn"]], "tianshou.policy.C51Policy": [[3, 1, 1, "", "compute_q_value"], [3, 1, 1, "", "learn"]], "tianshou.policy.CQLPolicy": [[3, 1, 1, "", "actor_pred"], [3, 1, 1, "", "calc_actor_loss"], [3, 1, 1, "", "calc_pi_values"], [3, 1, 1, "", "calc_random_values"], [3, 1, 1, "", "learn"], [3, 1, 1, "", "process_fn"], [3, 1, 1, "", "sync_weight"], [3, 1, 1, "", "train"]], "tianshou.policy.DDPGPolicy": [[3, 1, 1, "", "exploration_noise"], [3, 1, 1, "", "forward"], [3, 1, 1, "", "learn"], [3, 1, 1, "", "process_fn"], [3, 1, 1, "", "set_exp_noise"], [3, 1, 1, "", "sync_weight"], [3, 1, 1, "", "train"]], "tianshou.policy.DQNPolicy": [[3, 1, 1, "", "compute_q_value"], [3, 1, 1, "", "exploration_noise"], [3, 1, 1, "", "forward"], [3, 1, 1, "", "learn"], [3, 1, 1, "", "process_fn"], [3, 1, 1, "", "set_eps"], [3, 1, 1, "", "sync_weight"], [3, 1, 1, "", "train"]], "tianshou.policy.DiscreteBCQPolicy": [[3, 1, 1, "", "forward"], [3, 1, 1, "", "learn"], [3, 1, 1, "", "train"]], "tianshou.policy.DiscreteCQLPolicy": [[3, 1, 1, "", "learn"]], "tianshou.policy.DiscreteCRRPolicy": [[3, 1, 1, "", "learn"], [3, 1, 1, "", "sync_weight"]], "tianshou.policy.DiscreteSACPolicy": [[3, 1, 1, "", "exploration_noise"], [3, 1, 1, "", "forward"], [3, 1, 1, "", "learn"]], "tianshou.policy.FQFPolicy": [[3, 1, 1, "", "forward"], [3, 1, 1, "", "learn"]], "tianshou.policy.GAILPolicy": [[3, 1, 1, "", "disc"], [3, 1, 1, "", "learn"], [3, 1, 1, "", "process_fn"]], "tianshou.policy.ICMPolicy": [[3, 1, 1, "", "exploration_noise"], [3, 1, 1, "", "forward"], [3, 1, 1, "", "learn"], [3, 1, 1, "", "post_process_fn"], [3, 1, 1, "", "process_fn"], [3, 1, 1, "", "set_eps"], [3, 1, 1, "", "train"]], "tianshou.policy.IQNPolicy": [[3, 1, 1, "", "forward"], [3, 1, 1, "", "learn"]], "tianshou.policy.ImitationPolicy": [[3, 1, 1, "", "forward"], [3, 1, 1, "", "learn"]], "tianshou.policy.MultiAgentPolicyManager": [[3, 1, 1, "", "exploration_noise"], [3, 1, 1, "", "forward"], [3, 1, 1, "", "learn"], [3, 1, 1, "", "process_fn"], [3, 1, 1, "", "replace_policy"]], "tianshou.policy.NPGPolicy": [[3, 1, 1, "", "learn"], [3, 1, 1, "", "process_fn"]], "tianshou.policy.PGPolicy": [[3, 1, 1, "", "forward"], [3, 1, 1, "", "learn"], [3, 1, 1, "", "process_fn"]], "tianshou.policy.PPOPolicy": [[3, 1, 1, "", "learn"], [3, 1, 1, "", "process_fn"]], "tianshou.policy.PSRLPolicy": [[3, 1, 1, "", "forward"], [3, 1, 1, "", "learn"]], "tianshou.policy.QRDQNPolicy": [[3, 1, 1, "", "compute_q_value"], [3, 1, 1, "", "learn"]], "tianshou.policy.REDQPolicy": [[3, 1, 1, "", "forward"], [3, 1, 1, "", "learn"], [3, 1, 1, "", "sync_weight"], [3, 1, 1, "", "train"]], "tianshou.policy.RainbowPolicy": [[3, 1, 1, "", "learn"]], "tianshou.policy.RandomPolicy": [[3, 1, 1, "", "forward"], [3, 1, 1, "", "learn"]], "tianshou.policy.SACPolicy": [[3, 1, 1, "", "forward"], [3, 1, 1, "", "learn"], [3, 1, 1, "", "sync_weight"], [3, 1, 1, "", "train"]], "tianshou.policy.TD3BCPolicy": [[3, 1, 1, "", "learn"]], "tianshou.policy.TD3Policy": [[3, 1, 1, "", "learn"], [3, 1, 1, "", "sync_weight"], [3, 1, 1, "", "train"]], "tianshou.policy.TRPOPolicy": [[3, 1, 1, "", "learn"]], "tianshou.trainer": [[4, 0, 1, "", "OfflineTrainer"], [4, 0, 1, "", "OffpolicyTrainer"], [4, 0, 1, "", "OnpolicyTrainer"], [4, 3, 1, "", "gather_info"], [4, 3, 1, "", "test_episode"]], "tianshou.trainer.OfflineTrainer": [[4, 1, 1, "", "policy_update_fn"]], "tianshou.trainer.OffpolicyTrainer": [[4, 1, 1, "", "policy_update_fn"]], "tianshou.trainer.OnpolicyTrainer": [[4, 1, 1, "", "policy_update_fn"]], "tianshou.utils": [[5, 0, 1, "", "BaseLogger"], [5, 0, 1, "", "BasicLogger"], [5, 0, 1, "", "DummyTqdm"], [5, 0, 1, "", "LazyLogger"], [5, 0, 1, "", "MovAvg"], [5, 0, 1, "", "MultipleLRSchedulers"], [5, 0, 1, "", "RunningMeanStd"], [5, 0, 1, "", "TensorboardLogger"], [5, 0, 1, "", "WandbLogger"], [5, 3, 1, "", "deprecation"]], "tianshou.utils.BaseLogger": [[5, 1, 1, "", "log_test_data"], [5, 1, 1, "", "log_train_data"], [5, 1, 1, "", "log_update_data"], [5, 1, 1, "", "restore_data"], [5, 1, 1, "", "save_data"], [5, 1, 1, "", "write"]], "tianshou.utils.DummyTqdm": [[5, 1, 1, "", "set_postfix"], [5, 1, 1, "", "update"]], "tianshou.utils.LazyLogger": [[5, 1, 1, "", "restore_data"], [5, 1, 1, "", "save_data"], [5, 1, 1, "", "write"]], "tianshou.utils.MovAvg": [[5, 1, 1, "", "add"], [5, 1, 1, "", "get"], [5, 1, 1, "", "mean"], [5, 1, 1, "", "std"]], "tianshou.utils.MultipleLRSchedulers": [[5, 1, 1, "", "load_state_dict"], [5, 1, 1, "", "state_dict"], [5, 1, 1, "", "step"]], "tianshou.utils.RunningMeanStd": [[5, 1, 1, "", "norm"], [5, 1, 1, "", "update"]], "tianshou.utils.TensorboardLogger": [[5, 1, 1, "", "restore_data"], [5, 1, 1, "", "save_data"], [5, 1, 1, "", "write"]], "tianshou.utils.WandbLogger": [[5, 1, 1, "", "load"], [5, 1, 1, "", "restore_data"], [5, 1, 1, "", "save_data"], [5, 1, 1, "", "write"]], "tianshou.utils.net": [[5, 4, 0, "-", "common"], [5, 4, 0, "-", "continuous"], [5, 4, 0, "-", "discrete"]], "tianshou.utils.net.common": [[5, 0, 1, "", "ActorCritic"], [5, 0, 1, "", "BranchingNet"], [5, 0, 1, "", "DataParallelNet"], [5, 0, 1, "", "EnsembleLinear"], [5, 0, 1, "", "MLP"], [5, 0, 1, "", "Net"], [5, 0, 1, "", "NetBase"], [5, 0, 1, "", "Recurrent"], [5, 3, 1, "", "get_dict_state_decorator"], [5, 3, 1, "", "miniblock"]], "tianshou.utils.net.common.BranchingNet": [[5, 1, 1, "", "forward"]], "tianshou.utils.net.common.DataParallelNet": [[5, 1, 1, "", "forward"]], "tianshou.utils.net.common.EnsembleLinear": [[5, 1, 1, "", "forward"]], "tianshou.utils.net.common.MLP": [[5, 1, 1, "", "forward"]], "tianshou.utils.net.common.Net": [[5, 1, 1, "", "forward"]], "tianshou.utils.net.common.NetBase": [[5, 1, 1, "", "forward"]], "tianshou.utils.net.common.Recurrent": [[5, 1, 1, "", "forward"]], "tianshou.utils.net.continuous": [[5, 0, 1, "", "Actor"], [5, 0, 1, "", "ActorProb"], [5, 0, 1, "", "Critic"], [5, 0, 1, "", "Perturbation"], [5, 0, 1, "", "RecurrentActorProb"], [5, 0, 1, "", "RecurrentCritic"], [5, 0, 1, "", "VAE"]], "tianshou.utils.net.continuous.Actor": [[5, 1, 1, "", "forward"]], "tianshou.utils.net.continuous.ActorProb": [[5, 1, 1, "", "forward"]], "tianshou.utils.net.continuous.Critic": [[5, 1, 1, "", "forward"]], "tianshou.utils.net.continuous.Perturbation": [[5, 1, 1, "", "forward"]], "tianshou.utils.net.continuous.RecurrentActorProb": [[5, 1, 1, "", "forward"]], "tianshou.utils.net.continuous.RecurrentCritic": [[5, 1, 1, "", "forward"]], "tianshou.utils.net.continuous.VAE": [[5, 1, 1, "", "decode"], [5, 1, 1, "", "forward"]], "tianshou.utils.net.discrete": [[5, 0, 1, "", "Actor"], [5, 0, 1, "", "CosineEmbeddingNetwork"], [5, 0, 1, "", "Critic"], [5, 0, 1, "", "FractionProposalNetwork"], [5, 0, 1, "", "FullQuantileFunction"], [5, 0, 1, "", "ImplicitQuantileNetwork"], [5, 0, 1, "", "IntrinsicCuriosityModule"], [5, 0, 1, "", "NoisyLinear"], [5, 3, 1, "", "sample_noise"]], "tianshou.utils.net.discrete.Actor": [[5, 1, 1, "", "forward"]], "tianshou.utils.net.discrete.CosineEmbeddingNetwork": [[5, 1, 1, "", "forward"]], "tianshou.utils.net.discrete.Critic": [[5, 1, 1, "", "forward"]], "tianshou.utils.net.discrete.FractionProposalNetwork": [[5, 1, 1, "", "forward"]], "tianshou.utils.net.discrete.FullQuantileFunction": [[5, 1, 1, "", "forward"]], "tianshou.utils.net.discrete.ImplicitQuantileNetwork": [[5, 1, 1, "", "forward"]], "tianshou.utils.net.discrete.IntrinsicCuriosityModule": [[5, 1, 1, "", "forward"]], "tianshou.utils.net.discrete.NoisyLinear": [[5, 1, 1, "", "f"], [5, 1, 1, "", "forward"], [5, 1, 1, "", "reset"], [5, 1, 1, "", "sample"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function", "4": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"], "4": ["py", "module", "Python module"]}, "titleterms": {"tianshou": [0, 1, 2, 3, 4, 5, 6, 8, 12], "data": [0, 9, 11], "batch": [0, 9, 11, 12], "buffer": [0, 12], "replaybuff": 0, "prioritizedreplaybuff": 0, "herreplaybuff": 0, "replaybuffermanag": 0, "prioritizedreplaybuffermanag": 0, "herreplaybuffermanag": 0, "vectorreplaybuff": 0, "prioritizedvectorreplaybuff": 0, "hervectorreplaybuff": 0, "cachedreplaybuff": 0, "collector": [0, 11, 12, 13], "asynccollector": 0, "util": [0, 1, 4, 5], "to_numpi": 0, "to_torch": 0, "to_torch_a": 0, "segmenttre": 0, "env": 1, "vectorenv": [1, 11], "basevectorenv": 1, "dummyvectorenv": 1, "subprocvectorenv": 1, "shmemvectorenv": 1, "rayvectorenv": 1, "wrapper": 1, "continuoustodiscret": 1, "vectorenvwrapp": 1, "vectorenvnormob": 1, "worker": 1, "envwork": 1, "dummyenvwork": 1, "subprocenvwork": 1, "rayenvwork": 1, "pettingzooenv": 1, "explor": 2, "polici": [3, 4, 11, 12, 13], "base": 3, "model": 3, "free": 3, "dqn": 3, "famili": 3, "On": [3, 4], "off": [3, 4], "imit": 3, "multi": [3, 11, 16], "agent": [3, 11, 13, 16], "trainer": [4, 12, 13], "offlin": 4, "pre": 5, "defin": [5, 11], "network": [5, 11, 13], "common": 5, "discret": 5, "continu": 5, "contribut": 6, "instal": [6, 8], "develop": 6, "version": 6, "pep8": 6, "code": [6, 13], "style": [6, 11], "check": 6, "formatt": 6, "type": 6, "test": 6, "local": 6, "github": 6, "action": 6, "document": 6, "gener": 6, "contributor": 7, "welcom": 8, "tutori": 8, "api": 8, "doc": 8, "commun": 8, "indic": 8, "tabl": 8, "understand": 9, "hierarch": 9, "name": 9, "tensor": 9, "The": [9, 16], "structur": 9, "shown": 9, "tree": 9, "basic": [9, 12], "usag": 9, "what": 9, "doe": 9, "contain": 9, "construct": 9, "manipul": 9, "With": 9, "advanc": 9, "topic": 9, "kei": 9, "reserv": 9, "length": 9, "shape": 9, "aggreg": 9, "heterogen": 9, "miscellan": 9, "note": 9, "benchmark": 10, "mujoco": 10, "atari": 10, "cheat": 11, "sheet": 11, "build": [11, 13], "new": 11, "manual": 11, "evalu": 11, "custom": [11, 13], "train": [11, 13, 16], "process": 11, "resum": 11, "parallel": 11, "sampl": 11, "an": [11, 13, 16], "exampl": 11, "sync": 11, "async": 11, "step": 11, "same": 11, "color": 11, "end": 11, "up": 11, "one": 11, "i": 11, "dispos": 11, "time": 11, "envpool": 11, "integr": 11, "handl": 11, "stream": 11, "rnn": 11, "gpu": 11, "user": 11, "environ": [11, 13, 16], "differ": 11, "state": [11, 12], "represent": 11, "reinforc": 11, "learn": 11, "concept": 12, "forward": 12, "process_fn": 12, "A": 12, "high": 12, "level": 12, "explan": 12, "conclus": 12, "deep": 13, "q": 13, "overview": 13, "make": 13, "setup": 13, "vector": 13, "save": 13, "load": 13, "watch": 13, "": 13, "perform": 13, "get": 14, "start": 14, "jupyt": 14, "notebook": 14, "log": 15, "experi": 15, "tensorboardlogg": 15, "wandblogg": 15, "lazylogg": 15, "rl": 16, "tic": 16, "tac": 16, "toe": 16, "two": 16, "random": 16, "relationship": 16, "between": 16, "multiagentpolicymanag": 16, "manag": 16, "basepolici": 16, "marl": 16}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"tianshou.data": [[0, "tianshou-data"]], "Batch": [[0, "batch"], [12, "batch"]], "Buffer": [[0, "buffer"], [12, "buffer"]], "ReplayBuffer": [[0, "replaybuffer"]], "PrioritizedReplayBuffer": [[0, "prioritizedreplaybuffer"]], "HERReplayBuffer": [[0, "herreplaybuffer"]], "ReplayBufferManager": [[0, "replaybuffermanager"]], "PrioritizedReplayBufferManager": [[0, "prioritizedreplaybuffermanager"]], "HERReplayBufferManager": [[0, "herreplaybuffermanager"]], "VectorReplayBuffer": [[0, "vectorreplaybuffer"]], "PrioritizedVectorReplayBuffer": [[0, "prioritizedvectorreplaybuffer"]], "HERVectorReplayBuffer": [[0, "hervectorreplaybuffer"]], "CachedReplayBuffer": [[0, "cachedreplaybuffer"]], "Collector": [[0, "collector"], [0, "id1"], [12, "collector"]], "AsyncCollector": [[0, "asynccollector"]], "Utils": [[0, "utils"], [1, "utils"]], "to_numpy": [[0, "to-numpy"]], "to_torch": [[0, "to-torch"]], "to_torch_as": [[0, "to-torch-as"]], "SegmentTree": [[0, "segmenttree"]], "tianshou.env": [[1, "tianshou-env"]], "VectorEnv": [[1, "vectorenv"]], "BaseVectorEnv": [[1, "basevectorenv"]], "DummyVectorEnv": [[1, "dummyvectorenv"]], "SubprocVectorEnv": [[1, "subprocvectorenv"]], "ShmemVectorEnv": [[1, "shmemvectorenv"]], "RayVectorEnv": [[1, "rayvectorenv"]], "Wrapper": [[1, "wrapper"]], "ContinuousToDiscrete": [[1, "continuoustodiscrete"]], "VectorEnvWrapper": [[1, "vectorenvwrapper"]], "VectorEnvNormObs": [[1, "vectorenvnormobs"]], "Worker": [[1, "worker"]], "EnvWorker": [[1, "envworker"]], "DummyEnvWorker": [[1, "dummyenvworker"]], "SubprocEnvWorker": [[1, "subprocenvworker"]], "RayEnvWorker": [[1, "rayenvworker"]], "PettingZooEnv": [[1, "pettingzooenv"]], "tianshou.exploration": [[2, "tianshou-exploration"]], "tianshou.policy": [[3, "tianshou-policy"]], "Base": [[3, "base"]], "Model-free": [[3, "model-free"]], "DQN Family": [[3, "dqn-family"]], "On-policy": [[3, "on-policy"], [4, "on-policy"]], "Off-policy": [[3, "off-policy"], [4, "off-policy"]], "Imitation": [[3, "imitation"]], "Model-based": [[3, "model-based"]], "Multi-agent": [[3, "multi-agent"]], "tianshou.trainer": [[4, "tianshou-trainer"]], "Offline": [[4, "offline"]], "utils": [[4, "utils"]], "tianshou.utils": [[5, "tianshou-utils"]], "Pre-defined Networks": [[5, "pre-defined-networks"]], "Common": [[5, "common"]], "Discrete": [[5, "discrete"]], "Continuous": [[5, "continuous"]], "Contributing to Tianshou": [[6, "contributing-to-tianshou"]], "Install Develop Version": [[6, "install-develop-version"]], "PEP8 Code Style Check and Code Formatter": [[6, "pep8-code-style-check-and-code-formatter"]], "Type Check": [[6, "type-check"]], "Test Locally": [[6, "test-locally"]], "Test by GitHub Actions": [[6, "test-by-github-actions"]], "Documentation": [[6, "documentation"]], "Documentation Generation Test": [[6, "documentation-generation-test"]], "Contributor": [[7, "contributor"]], "Welcome to Tianshou!": [[8, "welcome-to-tianshou"]], "Installation": [[8, "installation"]], "Tutorials": [[8, null]], "API Docs": [[8, null]], "Community": [[8, null]], "Indices and tables": [[8, "indices-and-tables"]], "Understand Batch": [[9, "understand-batch"]], "Hierarchical Named Tensors": [[9, "hierarchical-named-tensors"]], "The structure of a Batch shown by a tree": [[9, null]], "Basic Usages": [[9, "basic-usages"]], "What Does Batch Contain": [[9, "what-does-batch-contain"]], "Construction of Batch": [[9, "construction-of-batch"]], "Data Manipulation With Batch": [[9, "data-manipulation-with-batch"]], "Advanced Topics": [[9, "advanced-topics"]], "Key Reservations": [[9, "key-reservations"]], "The structure of a Batch with reserved keys": [[9, null]], "Length and Shape": [[9, "length-and-shape"]], "Aggregation of Heterogeneous Batches": [[9, "aggregation-of-heterogeneous-batches"]], "Miscellaneous Notes": [[9, "miscellaneous-notes"]], "Benchmark": [[10, "benchmark"]], "Mujoco Benchmark": [[10, "mujoco-benchmark"]], "Atari Benchmark": [[10, "atari-benchmark"]], "Cheat Sheet": [[11, "cheat-sheet"]], "Build Policy Network": [[11, "build-policy-network"]], "Build New Policy": [[11, "build-new-policy"]], "Manually Evaluate Policy": [[11, "manually-evaluate-policy"]], "Customize Training Process": [[11, "customize-training-process"]], "Resume Training Process": [[11, "resume-training-process"]], "Parallel Sampling": [[11, "parallel-sampling"]], "An example of sync/async VectorEnv (steps with the same color end up in one batch that is disposed by the policy at the same time).": [[11, null]], "EnvPool Integration": [[11, "envpool-integration"]], "Handle Batched Data Stream in Collector": [[11, "handle-batched-data-stream-in-collector"]], "RNN-style Training": [[11, "rnn-style-training"]], "Multi-GPU Training": [[11, "multi-gpu-training"]], "User-defined Environment and Different State Representation": [[11, "user-defined-environment-and-different-state-representation"]], "Multi-Agent Reinforcement Learning": [[11, "multi-agent-reinforcement-learning"]], "Basic concepts in Tianshou": [[12, "basic-concepts-in-tianshou"]], "Policy": [[12, "policy"]], "States for policy": [[12, "states-for-policy"]], "policy.forward": [[12, "policy-forward"]], "policy.process_fn": [[12, "policy-process-fn"]], "Trainer": [[12, "trainer"]], "A High-level Explanation": [[12, "a-high-level-explanation"]], "Conclusion": [[12, "conclusion"]], "Deep Q Network": [[13, "deep-q-network"]], "Overview": [[13, "overview"]], "Make an Environment": [[13, "make-an-environment"]], "Setup Vectorized Environment": [[13, "setup-vectorized-environment"]], "Build the Network": [[13, "build-the-network"]], "Setup Policy": [[13, "setup-policy"]], "Setup Collector": [[13, "setup-collector"]], "Train Policy with a Trainer": [[13, "train-policy-with-a-trainer"]], "Save/Load Policy": [[13, "save-load-policy"]], "Watch the Agent\u2019s Performance": [[13, "watch-the-agent-s-performance"]], "Train a Policy with Customized Codes": [[13, "train-a-policy-with-customized-codes"]], "Get Started with Jupyter Notebook": [[14, "get-started-with-jupyter-notebook"]], "Logging Experiments": [[15, "logging-experiments"]], "TensorboardLogger": [[15, "tensorboardlogger"]], "WandbLogger": [[15, "wandblogger"]], "LazyLogger": [[15, "lazylogger"]], "Multi-Agent RL": [[16, "multi-agent-rl"]], "Tic-Tac-Toe Environment": [[16, "tic-tac-toe-environment"]], "Two Random Agents": [[16, "two-random-agents"]], "The relationship between MultiAgentPolicyManager (Manager) and BasePolicy (Agent)": [[16, null], [16, null]], "Train an MARL Agent": [[16, "train-an-marl-agent"]]}, "indexentries": {"asynccollector (class in tianshou.data)": [[0, "tianshou.data.AsyncCollector"]], "batch (class in tianshou.data)": [[0, "tianshou.data.Batch"]], "cachedreplaybuffer (class in tianshou.data)": [[0, "tianshou.data.CachedReplayBuffer"]], "collector (class in tianshou.data)": [[0, "tianshou.data.Collector"]], "herreplaybuffer (class in tianshou.data)": [[0, "tianshou.data.HERReplayBuffer"]], "herreplaybuffermanager (class in tianshou.data)": [[0, "tianshou.data.HERReplayBufferManager"]], "hervectorreplaybuffer (class in tianshou.data)": [[0, "tianshou.data.HERVectorReplayBuffer"]], "prioritizedreplaybuffer (class in tianshou.data)": [[0, "tianshou.data.PrioritizedReplayBuffer"]], "prioritizedreplaybuffermanager (class in tianshou.data)": [[0, "tianshou.data.PrioritizedReplayBufferManager"]], "prioritizedvectorreplaybuffer (class in tianshou.data)": [[0, "tianshou.data.PrioritizedVectorReplayBuffer"]], "replaybuffer (class in tianshou.data)": [[0, "tianshou.data.ReplayBuffer"]], "replaybuffermanager (class in tianshou.data)": [[0, "tianshou.data.ReplayBufferManager"]], "segmenttree (class in tianshou.data)": [[0, "tianshou.data.SegmentTree"]], "vectorreplaybuffer (class in tianshou.data)": [[0, "tianshou.data.VectorReplayBuffer"]], "__getitem__() (tianshou.data.batch method)": [[0, "tianshou.data.Batch.__getitem__"]], "__getitem__() (tianshou.data.prioritizedreplaybuffer method)": [[0, "tianshou.data.PrioritizedReplayBuffer.__getitem__"]], "__getitem__() (tianshou.data.replaybuffer method)": [[0, "tianshou.data.ReplayBuffer.__getitem__"]], "__getitem__() (tianshou.data.segmenttree method)": [[0, "tianshou.data.SegmentTree.__getitem__"]], "__len__() (tianshou.data.batch method)": [[0, "tianshou.data.Batch.__len__"]], "__len__() (tianshou.data.replaybuffer method)": [[0, "tianshou.data.ReplayBuffer.__len__"]], "__len__() (tianshou.data.replaybuffermanager method)": [[0, "tianshou.data.ReplayBufferManager.__len__"]], "__len__() (tianshou.data.segmenttree method)": [[0, "tianshou.data.SegmentTree.__len__"]], "__setitem__() (tianshou.data.batch method)": [[0, "tianshou.data.Batch.__setitem__"]], "__setitem__() (tianshou.data.segmenttree method)": [[0, "tianshou.data.SegmentTree.__setitem__"]], "add() (tianshou.data.cachedreplaybuffer method)": [[0, "tianshou.data.CachedReplayBuffer.add"]], "add() (tianshou.data.herreplaybuffer method)": [[0, "tianshou.data.HERReplayBuffer.add"]], "add() (tianshou.data.herreplaybuffermanager method)": [[0, "tianshou.data.HERReplayBufferManager.add"]], "add() (tianshou.data.prioritizedreplaybuffer method)": [[0, "tianshou.data.PrioritizedReplayBuffer.add"]], "add() (tianshou.data.replaybuffer method)": [[0, "tianshou.data.ReplayBuffer.add"]], "add() (tianshou.data.replaybuffermanager method)": [[0, "tianshou.data.ReplayBufferManager.add"]], "cat() (tianshou.data.batch static method)": [[0, "tianshou.data.Batch.cat"]], "cat_() (tianshou.data.batch method)": [[0, "tianshou.data.Batch.cat_"]], "collect() (tianshou.data.asynccollector method)": [[0, "tianshou.data.AsyncCollector.collect"]], "collect() (tianshou.data.collector method)": [[0, "tianshou.data.Collector.collect"]], "empty() (tianshou.data.batch static method)": [[0, "tianshou.data.Batch.empty"]], "empty_() (tianshou.data.batch method)": [[0, "tianshou.data.Batch.empty_"]], "from_data() (tianshou.data.replaybuffer class method)": [[0, "tianshou.data.ReplayBuffer.from_data"]], "get() (tianshou.data.replaybuffer method)": [[0, "tianshou.data.ReplayBuffer.get"]], "get_prefix_sum_idx() (tianshou.data.segmenttree method)": [[0, "tianshou.data.SegmentTree.get_prefix_sum_idx"]], "get_weight() (tianshou.data.prioritizedreplaybuffer method)": [[0, "tianshou.data.PrioritizedReplayBuffer.get_weight"]], "init_weight() (tianshou.data.prioritizedreplaybuffer method)": [[0, "tianshou.data.PrioritizedReplayBuffer.init_weight"]], "is_empty() (tianshou.data.batch method)": [[0, "tianshou.data.Batch.is_empty"]], "load_hdf5() (tianshou.data.replaybuffer class method)": [[0, "tianshou.data.ReplayBuffer.load_hdf5"]], "next() (tianshou.data.replaybuffer method)": [[0, "tianshou.data.ReplayBuffer.next"]], "next() (tianshou.data.replaybuffermanager method)": [[0, "tianshou.data.ReplayBufferManager.next"]], "prev() (tianshou.data.replaybuffer method)": [[0, "tianshou.data.ReplayBuffer.prev"]], "prev() (tianshou.data.replaybuffermanager method)": [[0, "tianshou.data.ReplayBufferManager.prev"]], "reduce() (tianshou.data.segmenttree method)": [[0, "tianshou.data.SegmentTree.reduce"]], "reset() (tianshou.data.collector method)": [[0, "tianshou.data.Collector.reset"]], "reset() (tianshou.data.herreplaybuffer method)": [[0, "tianshou.data.HERReplayBuffer.reset"]], "reset() (tianshou.data.replaybuffer method)": [[0, "tianshou.data.ReplayBuffer.reset"]], "reset() (tianshou.data.replaybuffermanager method)": [[0, "tianshou.data.ReplayBufferManager.reset"]], "reset_buffer() (tianshou.data.collector method)": [[0, "tianshou.data.Collector.reset_buffer"]], "reset_env() (tianshou.data.asynccollector method)": [[0, "tianshou.data.AsyncCollector.reset_env"]], "reset_env() (tianshou.data.collector method)": [[0, "tianshou.data.Collector.reset_env"]], "reset_stat() (tianshou.data.collector method)": [[0, "tianshou.data.Collector.reset_stat"]], "rewrite_transitions() (tianshou.data.herreplaybuffer method)": [[0, "tianshou.data.HERReplayBuffer.rewrite_transitions"]], "sample() (tianshou.data.replaybuffer method)": [[0, "tianshou.data.ReplayBuffer.sample"]], "sample_indices() (tianshou.data.herreplaybuffer method)": [[0, "tianshou.data.HERReplayBuffer.sample_indices"]], "sample_indices() (tianshou.data.prioritizedreplaybuffer method)": [[0, "tianshou.data.PrioritizedReplayBuffer.sample_indices"]], "sample_indices() (tianshou.data.replaybuffer method)": [[0, "tianshou.data.ReplayBuffer.sample_indices"]], "sample_indices() (tianshou.data.replaybuffermanager method)": [[0, "tianshou.data.ReplayBufferManager.sample_indices"]], "save_hdf5() (tianshou.data.herreplaybuffer method)": [[0, "tianshou.data.HERReplayBuffer.save_hdf5"]], "save_hdf5() (tianshou.data.herreplaybuffermanager method)": [[0, "tianshou.data.HERReplayBufferManager.save_hdf5"]], "save_hdf5() (tianshou.data.replaybuffer method)": [[0, "tianshou.data.ReplayBuffer.save_hdf5"]], "set_batch() (tianshou.data.herreplaybuffer method)": [[0, "tianshou.data.HERReplayBuffer.set_batch"]], "set_batch() (tianshou.data.herreplaybuffermanager method)": [[0, "tianshou.data.HERReplayBufferManager.set_batch"]], "set_batch() (tianshou.data.replaybuffer method)": [[0, "tianshou.data.ReplayBuffer.set_batch"]], "set_batch() (tianshou.data.replaybuffermanager method)": [[0, "tianshou.data.ReplayBufferManager.set_batch"]], "set_beta() (tianshou.data.prioritizedreplaybuffer method)": [[0, "tianshou.data.PrioritizedReplayBuffer.set_beta"]], "set_beta() (tianshou.data.prioritizedvectorreplaybuffer method)": [[0, "tianshou.data.PrioritizedVectorReplayBuffer.set_beta"]], "shape (tianshou.data.batch property)": [[0, "tianshou.data.Batch.shape"]], "split() (tianshou.data.batch method)": [[0, "tianshou.data.Batch.split"]], "stack() (tianshou.data.batch static method)": [[0, "tianshou.data.Batch.stack"]], "stack_() (tianshou.data.batch method)": [[0, "tianshou.data.Batch.stack_"]], "to_numpy() (in module tianshou.data)": [[0, "tianshou.data.to_numpy"]], "to_numpy() (tianshou.data.batch method)": [[0, "tianshou.data.Batch.to_numpy"]], "to_torch() (in module tianshou.data)": [[0, "tianshou.data.to_torch"]], "to_torch() (tianshou.data.batch method)": [[0, "tianshou.data.Batch.to_torch"]], "to_torch_as() (in module tianshou.data)": [[0, "tianshou.data.to_torch_as"]], "unfinished_index() (tianshou.data.replaybuffer method)": [[0, "tianshou.data.ReplayBuffer.unfinished_index"]], "unfinished_index() (tianshou.data.replaybuffermanager method)": [[0, "tianshou.data.ReplayBufferManager.unfinished_index"]], "update() (tianshou.data.batch method)": [[0, "tianshou.data.Batch.update"]], "update() (tianshou.data.herreplaybuffer method)": [[0, "tianshou.data.HERReplayBuffer.update"]], "update() (tianshou.data.herreplaybuffermanager method)": [[0, "tianshou.data.HERReplayBufferManager.update"]], "update() (tianshou.data.prioritizedreplaybuffer method)": [[0, "tianshou.data.PrioritizedReplayBuffer.update"]], "update() (tianshou.data.replaybuffer method)": [[0, "tianshou.data.ReplayBuffer.update"]], "update() (tianshou.data.replaybuffermanager method)": [[0, "tianshou.data.ReplayBufferManager.update"]], "update_weight() (tianshou.data.prioritizedreplaybuffer method)": [[0, "tianshou.data.PrioritizedReplayBuffer.update_weight"]], "basevectorenv (class in tianshou.env)": [[1, "tianshou.env.BaseVectorEnv"]], "continuoustodiscrete (class in tianshou.env)": [[1, "tianshou.env.ContinuousToDiscrete"]], "dummyenvworker (class in tianshou.env.worker)": [[1, "tianshou.env.worker.DummyEnvWorker"]], "dummyvectorenv (class in tianshou.env)": [[1, "tianshou.env.DummyVectorEnv"]], "envworker (class in tianshou.env.worker)": [[1, "tianshou.env.worker.EnvWorker"]], "pettingzooenv (class in tianshou.env)": [[1, "tianshou.env.PettingZooEnv"]], "rayenvworker (class in tianshou.env.worker)": [[1, "tianshou.env.worker.RayEnvWorker"]], "rayvectorenv (class in tianshou.env)": [[1, "tianshou.env.RayVectorEnv"]], "shmemvectorenv (class in tianshou.env)": [[1, "tianshou.env.ShmemVectorEnv"]], "subprocenvworker (class in tianshou.env.worker)": [[1, "tianshou.env.worker.SubprocEnvWorker"]], "subprocvectorenv (class in tianshou.env)": [[1, "tianshou.env.SubprocVectorEnv"]], "vectorenvnormobs (class in tianshou.env)": [[1, "tianshou.env.VectorEnvNormObs"]], "vectorenvwrapper (class in tianshou.env)": [[1, "tianshou.env.VectorEnvWrapper"]], "__len__() (tianshou.env.basevectorenv method)": [[1, "tianshou.env.BaseVectorEnv.__len__"]], "__len__() (tianshou.env.vectorenvwrapper method)": [[1, "tianshou.env.VectorEnvWrapper.__len__"]], "action() (tianshou.env.continuoustodiscrete method)": [[1, "tianshou.env.ContinuousToDiscrete.action"]], "close() (tianshou.env.basevectorenv method)": [[1, "tianshou.env.BaseVectorEnv.close"]], "close() (tianshou.env.pettingzooenv method)": [[1, "tianshou.env.PettingZooEnv.close"]], "close() (tianshou.env.vectorenvwrapper method)": [[1, "tianshou.env.VectorEnvWrapper.close"]], "close() (tianshou.env.worker.envworker method)": [[1, "tianshou.env.worker.EnvWorker.close"]], "close_env() (tianshou.env.worker.dummyenvworker method)": [[1, "tianshou.env.worker.DummyEnvWorker.close_env"]], "close_env() (tianshou.env.worker.envworker method)": [[1, "tianshou.env.worker.EnvWorker.close_env"]], "close_env() (tianshou.env.worker.rayenvworker method)": [[1, "tianshou.env.worker.RayEnvWorker.close_env"]], "close_env() (tianshou.env.worker.subprocenvworker method)": [[1, "tianshou.env.worker.SubprocEnvWorker.close_env"]], "get_env_attr() (tianshou.env.basevectorenv method)": [[1, "tianshou.env.BaseVectorEnv.get_env_attr"]], "get_env_attr() (tianshou.env.vectorenvwrapper method)": [[1, "tianshou.env.VectorEnvWrapper.get_env_attr"]], "get_env_attr() (tianshou.env.worker.dummyenvworker method)": [[1, "tianshou.env.worker.DummyEnvWorker.get_env_attr"]], "get_env_attr() (tianshou.env.worker.envworker method)": [[1, "tianshou.env.worker.EnvWorker.get_env_attr"]], "get_env_attr() (tianshou.env.worker.rayenvworker method)": [[1, "tianshou.env.worker.RayEnvWorker.get_env_attr"]], "get_env_attr() (tianshou.env.worker.subprocenvworker method)": [[1, "tianshou.env.worker.SubprocEnvWorker.get_env_attr"]], "get_obs_rms() (tianshou.env.vectorenvnormobs method)": [[1, "tianshou.env.VectorEnvNormObs.get_obs_rms"]], "recv() (tianshou.env.worker.envworker method)": [[1, "tianshou.env.worker.EnvWorker.recv"]], "recv() (tianshou.env.worker.rayenvworker method)": [[1, "tianshou.env.worker.RayEnvWorker.recv"]], "recv() (tianshou.env.worker.subprocenvworker method)": [[1, "tianshou.env.worker.SubprocEnvWorker.recv"]], "render() (tianshou.env.basevectorenv method)": [[1, "tianshou.env.BaseVectorEnv.render"]], "render() (tianshou.env.pettingzooenv method)": [[1, "tianshou.env.PettingZooEnv.render"]], "render() (tianshou.env.vectorenvwrapper method)": [[1, "tianshou.env.VectorEnvWrapper.render"]], "render() (tianshou.env.worker.dummyenvworker method)": [[1, "tianshou.env.worker.DummyEnvWorker.render"]], "render() (tianshou.env.worker.envworker method)": [[1, "tianshou.env.worker.EnvWorker.render"]], "render() (tianshou.env.worker.rayenvworker method)": [[1, "tianshou.env.worker.RayEnvWorker.render"]], "render() (tianshou.env.worker.subprocenvworker method)": [[1, "tianshou.env.worker.SubprocEnvWorker.render"]], "reset() (tianshou.env.basevectorenv method)": [[1, "tianshou.env.BaseVectorEnv.reset"]], "reset() (tianshou.env.pettingzooenv method)": [[1, "tianshou.env.PettingZooEnv.reset"]], "reset() (tianshou.env.vectorenvnormobs method)": [[1, "tianshou.env.VectorEnvNormObs.reset"]], "reset() (tianshou.env.vectorenvwrapper method)": [[1, "tianshou.env.VectorEnvWrapper.reset"]], "reset() (tianshou.env.worker.dummyenvworker method)": [[1, "tianshou.env.worker.DummyEnvWorker.reset"]], "reset() (tianshou.env.worker.envworker method)": [[1, "tianshou.env.worker.EnvWorker.reset"]], "reset() (tianshou.env.worker.rayenvworker method)": [[1, "tianshou.env.worker.RayEnvWorker.reset"]], "reset() (tianshou.env.worker.subprocenvworker method)": [[1, "tianshou.env.worker.SubprocEnvWorker.reset"]], "seed() (tianshou.env.basevectorenv method)": [[1, "tianshou.env.BaseVectorEnv.seed"]], "seed() (tianshou.env.pettingzooenv method)": [[1, "tianshou.env.PettingZooEnv.seed"]], "seed() (tianshou.env.vectorenvwrapper method)": [[1, "tianshou.env.VectorEnvWrapper.seed"]], "seed() (tianshou.env.worker.dummyenvworker method)": [[1, "tianshou.env.worker.DummyEnvWorker.seed"]], "seed() (tianshou.env.worker.envworker method)": [[1, "tianshou.env.worker.EnvWorker.seed"]], "seed() (tianshou.env.worker.rayenvworker method)": [[1, "tianshou.env.worker.RayEnvWorker.seed"]], "seed() (tianshou.env.worker.subprocenvworker method)": [[1, "tianshou.env.worker.SubprocEnvWorker.seed"]], "send() (tianshou.env.worker.dummyenvworker method)": [[1, "tianshou.env.worker.DummyEnvWorker.send"]], "send() (tianshou.env.worker.envworker method)": [[1, "tianshou.env.worker.EnvWorker.send"]], "send() (tianshou.env.worker.rayenvworker method)": [[1, "tianshou.env.worker.RayEnvWorker.send"]], "send() (tianshou.env.worker.subprocenvworker method)": [[1, "tianshou.env.worker.SubprocEnvWorker.send"]], "set_env_attr() (tianshou.env.basevectorenv method)": [[1, "tianshou.env.BaseVectorEnv.set_env_attr"]], "set_env_attr() (tianshou.env.vectorenvwrapper method)": [[1, "tianshou.env.VectorEnvWrapper.set_env_attr"]], "set_env_attr() (tianshou.env.worker.dummyenvworker method)": [[1, "tianshou.env.worker.DummyEnvWorker.set_env_attr"]], "set_env_attr() (tianshou.env.worker.envworker method)": [[1, "tianshou.env.worker.EnvWorker.set_env_attr"]], "set_env_attr() (tianshou.env.worker.rayenvworker method)": [[1, "tianshou.env.worker.RayEnvWorker.set_env_attr"]], "set_env_attr() (tianshou.env.worker.subprocenvworker method)": [[1, "tianshou.env.worker.SubprocEnvWorker.set_env_attr"]], "set_obs_rms() (tianshou.env.vectorenvnormobs method)": [[1, "tianshou.env.VectorEnvNormObs.set_obs_rms"]], "step() (tianshou.env.basevectorenv method)": [[1, "tianshou.env.BaseVectorEnv.step"]], "step() (tianshou.env.pettingzooenv method)": [[1, "tianshou.env.PettingZooEnv.step"]], "step() (tianshou.env.vectorenvnormobs method)": [[1, "tianshou.env.VectorEnvNormObs.step"]], "step() (tianshou.env.vectorenvwrapper method)": [[1, "tianshou.env.VectorEnvWrapper.step"]], "step() (tianshou.env.worker.envworker method)": [[1, "tianshou.env.worker.EnvWorker.step"]], "wait() (tianshou.env.worker.dummyenvworker static method)": [[1, "tianshou.env.worker.DummyEnvWorker.wait"]], "wait() (tianshou.env.worker.envworker static method)": [[1, "tianshou.env.worker.EnvWorker.wait"]], "wait() (tianshou.env.worker.rayenvworker static method)": [[1, "tianshou.env.worker.RayEnvWorker.wait"]], "wait() (tianshou.env.worker.subprocenvworker static method)": [[1, "tianshou.env.worker.SubprocEnvWorker.wait"]], "basenoise (class in tianshou.exploration)": [[2, "tianshou.exploration.BaseNoise"]], "gaussiannoise (class in tianshou.exploration)": [[2, "tianshou.exploration.GaussianNoise"]], "ounoise (class in tianshou.exploration)": [[2, "tianshou.exploration.OUNoise"]], "__call__() (tianshou.exploration.basenoise method)": [[2, "tianshou.exploration.BaseNoise.__call__"]], "__call__() (tianshou.exploration.gaussiannoise method)": [[2, "tianshou.exploration.GaussianNoise.__call__"]], "__call__() (tianshou.exploration.ounoise method)": [[2, "tianshou.exploration.OUNoise.__call__"]], "module": [[2, "module-tianshou.exploration"], [5, "module-tianshou.utils"], [5, "module-tianshou.utils.net.common"], [5, "module-tianshou.utils.net.continuous"], [5, "module-tianshou.utils.net.discrete"]], "reset() (tianshou.exploration.basenoise method)": [[2, "tianshou.exploration.BaseNoise.reset"]], "reset() (tianshou.exploration.ounoise method)": [[2, "tianshou.exploration.OUNoise.reset"]], "tianshou.exploration": [[2, "module-tianshou.exploration"]], "a2cpolicy (class in tianshou.policy)": [[3, "tianshou.policy.A2CPolicy"]], "bcqpolicy (class in tianshou.policy)": [[3, "tianshou.policy.BCQPolicy"]], "basepolicy (class in tianshou.policy)": [[3, "tianshou.policy.BasePolicy"]], "branchingdqnpolicy (class in tianshou.policy)": [[3, "tianshou.policy.BranchingDQNPolicy"]], "c51policy (class in tianshou.policy)": [[3, "tianshou.policy.C51Policy"]], "cqlpolicy (class in tianshou.policy)": [[3, "tianshou.policy.CQLPolicy"]], "ddpgpolicy (class in tianshou.policy)": [[3, "tianshou.policy.DDPGPolicy"]], "dqnpolicy (class in tianshou.policy)": [[3, "tianshou.policy.DQNPolicy"]], "discretebcqpolicy (class in tianshou.policy)": [[3, "tianshou.policy.DiscreteBCQPolicy"]], "discretecqlpolicy (class in tianshou.policy)": [[3, "tianshou.policy.DiscreteCQLPolicy"]], "discretecrrpolicy (class in tianshou.policy)": [[3, "tianshou.policy.DiscreteCRRPolicy"]], "discretesacpolicy (class in tianshou.policy)": [[3, "tianshou.policy.DiscreteSACPolicy"]], "fqfpolicy (class in tianshou.policy)": [[3, "tianshou.policy.FQFPolicy"]], "gailpolicy (class in tianshou.policy)": [[3, "tianshou.policy.GAILPolicy"]], "icmpolicy (class in tianshou.policy)": [[3, "tianshou.policy.ICMPolicy"]], "iqnpolicy (class in tianshou.policy)": [[3, "tianshou.policy.IQNPolicy"]], "imitationpolicy (class in tianshou.policy)": [[3, "tianshou.policy.ImitationPolicy"]], "multiagentpolicymanager (class in tianshou.policy)": [[3, "tianshou.policy.MultiAgentPolicyManager"]], "npgpolicy (class in tianshou.policy)": [[3, "tianshou.policy.NPGPolicy"]], "pgpolicy (class in tianshou.policy)": [[3, "tianshou.policy.PGPolicy"]], "ppopolicy (class in tianshou.policy)": [[3, "tianshou.policy.PPOPolicy"]], "psrlpolicy (class in tianshou.policy)": [[3, "tianshou.policy.PSRLPolicy"]], "qrdqnpolicy (class in tianshou.policy)": [[3, "tianshou.policy.QRDQNPolicy"]], "redqpolicy (class in tianshou.policy)": [[3, "tianshou.policy.REDQPolicy"]], "rainbowpolicy (class in tianshou.policy)": [[3, "tianshou.policy.RainbowPolicy"]], "randompolicy (class in tianshou.policy)": [[3, "tianshou.policy.RandomPolicy"]], "sacpolicy (class in tianshou.policy)": [[3, "tianshou.policy.SACPolicy"]], "td3bcpolicy (class in tianshou.policy)": [[3, "tianshou.policy.TD3BCPolicy"]], "td3policy (class in tianshou.policy)": [[3, "tianshou.policy.TD3Policy"]], "trpopolicy (class in tianshou.policy)": [[3, "tianshou.policy.TRPOPolicy"]], "actor_pred() (tianshou.policy.cqlpolicy method)": [[3, "tianshou.policy.CQLPolicy.actor_pred"]], "calc_actor_loss() (tianshou.policy.cqlpolicy method)": [[3, "tianshou.policy.CQLPolicy.calc_actor_loss"]], "calc_pi_values() (tianshou.policy.cqlpolicy method)": [[3, "tianshou.policy.CQLPolicy.calc_pi_values"]], "calc_random_values() (tianshou.policy.cqlpolicy method)": [[3, "tianshou.policy.CQLPolicy.calc_random_values"]], "compute_episodic_return() (tianshou.policy.basepolicy static method)": [[3, "tianshou.policy.BasePolicy.compute_episodic_return"]], "compute_nstep_return() (tianshou.policy.basepolicy static method)": [[3, "tianshou.policy.BasePolicy.compute_nstep_return"]], "compute_q_value() (tianshou.policy.c51policy method)": [[3, "tianshou.policy.C51Policy.compute_q_value"]], "compute_q_value() (tianshou.policy.dqnpolicy method)": [[3, "tianshou.policy.DQNPolicy.compute_q_value"]], "compute_q_value() (tianshou.policy.qrdqnpolicy method)": [[3, "tianshou.policy.QRDQNPolicy.compute_q_value"]], "disc() (tianshou.policy.gailpolicy method)": [[3, "tianshou.policy.GAILPolicy.disc"]], "exploration_noise() (tianshou.policy.basepolicy method)": [[3, "tianshou.policy.BasePolicy.exploration_noise"]], "exploration_noise() (tianshou.policy.branchingdqnpolicy method)": [[3, "tianshou.policy.BranchingDQNPolicy.exploration_noise"]], "exploration_noise() (tianshou.policy.ddpgpolicy method)": [[3, "tianshou.policy.DDPGPolicy.exploration_noise"]], "exploration_noise() (tianshou.policy.dqnpolicy method)": [[3, "tianshou.policy.DQNPolicy.exploration_noise"]], "exploration_noise() (tianshou.policy.discretesacpolicy method)": [[3, "tianshou.policy.DiscreteSACPolicy.exploration_noise"]], "exploration_noise() (tianshou.policy.icmpolicy method)": [[3, "tianshou.policy.ICMPolicy.exploration_noise"]], "exploration_noise() (tianshou.policy.multiagentpolicymanager method)": [[3, "tianshou.policy.MultiAgentPolicyManager.exploration_noise"]], "forward() (tianshou.policy.bcqpolicy method)": [[3, "tianshou.policy.BCQPolicy.forward"]], "forward() (tianshou.policy.basepolicy method)": [[3, "tianshou.policy.BasePolicy.forward"]], "forward() (tianshou.policy.branchingdqnpolicy method)": [[3, "tianshou.policy.BranchingDQNPolicy.forward"]], "forward() (tianshou.policy.ddpgpolicy method)": [[3, "tianshou.policy.DDPGPolicy.forward"]], "forward() (tianshou.policy.dqnpolicy method)": [[3, "tianshou.policy.DQNPolicy.forward"]], "forward() (tianshou.policy.discretebcqpolicy method)": [[3, "tianshou.policy.DiscreteBCQPolicy.forward"]], "forward() (tianshou.policy.discretesacpolicy method)": [[3, "tianshou.policy.DiscreteSACPolicy.forward"]], "forward() (tianshou.policy.fqfpolicy method)": [[3, "tianshou.policy.FQFPolicy.forward"]], "forward() (tianshou.policy.icmpolicy method)": [[3, "tianshou.policy.ICMPolicy.forward"]], "forward() (tianshou.policy.iqnpolicy method)": [[3, "tianshou.policy.IQNPolicy.forward"]], "forward() (tianshou.policy.imitationpolicy method)": [[3, "tianshou.policy.ImitationPolicy.forward"]], "forward() (tianshou.policy.multiagentpolicymanager method)": [[3, "tianshou.policy.MultiAgentPolicyManager.forward"]], "forward() (tianshou.policy.pgpolicy method)": [[3, "tianshou.policy.PGPolicy.forward"]], "forward() (tianshou.policy.psrlpolicy method)": [[3, "tianshou.policy.PSRLPolicy.forward"]], "forward() (tianshou.policy.redqpolicy method)": [[3, "tianshou.policy.REDQPolicy.forward"]], "forward() (tianshou.policy.randompolicy method)": [[3, "tianshou.policy.RandomPolicy.forward"]], "forward() (tianshou.policy.sacpolicy method)": [[3, "tianshou.policy.SACPolicy.forward"]], "learn() (tianshou.policy.a2cpolicy method)": [[3, "tianshou.policy.A2CPolicy.learn"]], "learn() (tianshou.policy.bcqpolicy method)": [[3, "tianshou.policy.BCQPolicy.learn"]], "learn() (tianshou.policy.basepolicy method)": [[3, "tianshou.policy.BasePolicy.learn"]], "learn() (tianshou.policy.branchingdqnpolicy method)": [[3, "tianshou.policy.BranchingDQNPolicy.learn"]], "learn() (tianshou.policy.c51policy method)": [[3, "tianshou.policy.C51Policy.learn"]], "learn() (tianshou.policy.cqlpolicy method)": [[3, "tianshou.policy.CQLPolicy.learn"]], "learn() (tianshou.policy.ddpgpolicy method)": [[3, "tianshou.policy.DDPGPolicy.learn"]], "learn() (tianshou.policy.dqnpolicy method)": [[3, "tianshou.policy.DQNPolicy.learn"]], "learn() (tianshou.policy.discretebcqpolicy method)": [[3, "tianshou.policy.DiscreteBCQPolicy.learn"]], "learn() (tianshou.policy.discretecqlpolicy method)": [[3, "tianshou.policy.DiscreteCQLPolicy.learn"]], "learn() (tianshou.policy.discretecrrpolicy method)": [[3, "tianshou.policy.DiscreteCRRPolicy.learn"]], "learn() (tianshou.policy.discretesacpolicy method)": [[3, "tianshou.policy.DiscreteSACPolicy.learn"]], "learn() (tianshou.policy.fqfpolicy method)": [[3, "tianshou.policy.FQFPolicy.learn"]], "learn() (tianshou.policy.gailpolicy method)": [[3, "tianshou.policy.GAILPolicy.learn"]], "learn() (tianshou.policy.icmpolicy method)": [[3, "tianshou.policy.ICMPolicy.learn"]], "learn() (tianshou.policy.iqnpolicy method)": [[3, "tianshou.policy.IQNPolicy.learn"]], "learn() (tianshou.policy.imitationpolicy method)": [[3, "tianshou.policy.ImitationPolicy.learn"]], "learn() (tianshou.policy.multiagentpolicymanager method)": [[3, "tianshou.policy.MultiAgentPolicyManager.learn"]], "learn() (tianshou.policy.npgpolicy method)": [[3, "tianshou.policy.NPGPolicy.learn"]], "learn() (tianshou.policy.pgpolicy method)": [[3, "tianshou.policy.PGPolicy.learn"]], "learn() (tianshou.policy.ppopolicy method)": [[3, "tianshou.policy.PPOPolicy.learn"]], "learn() (tianshou.policy.psrlpolicy method)": [[3, "tianshou.policy.PSRLPolicy.learn"]], "learn() (tianshou.policy.qrdqnpolicy method)": [[3, "tianshou.policy.QRDQNPolicy.learn"]], "learn() (tianshou.policy.redqpolicy method)": [[3, "tianshou.policy.REDQPolicy.learn"]], "learn() (tianshou.policy.rainbowpolicy method)": [[3, "tianshou.policy.RainbowPolicy.learn"]], "learn() (tianshou.policy.randompolicy method)": [[3, "tianshou.policy.RandomPolicy.learn"]], "learn() (tianshou.policy.sacpolicy method)": [[3, "tianshou.policy.SACPolicy.learn"]], "learn() (tianshou.policy.td3bcpolicy method)": [[3, "tianshou.policy.TD3BCPolicy.learn"]], "learn() (tianshou.policy.td3policy method)": [[3, "tianshou.policy.TD3Policy.learn"]], "learn() (tianshou.policy.trpopolicy method)": [[3, "tianshou.policy.TRPOPolicy.learn"]], "map_action() (tianshou.policy.basepolicy method)": [[3, "tianshou.policy.BasePolicy.map_action"]], "map_action_inverse() (tianshou.policy.basepolicy method)": [[3, "tianshou.policy.BasePolicy.map_action_inverse"]], "post_process_fn() (tianshou.policy.basepolicy method)": [[3, "tianshou.policy.BasePolicy.post_process_fn"]], "post_process_fn() (tianshou.policy.icmpolicy method)": [[3, "tianshou.policy.ICMPolicy.post_process_fn"]], "process_fn() (tianshou.policy.a2cpolicy method)": [[3, "tianshou.policy.A2CPolicy.process_fn"]], "process_fn() (tianshou.policy.basepolicy method)": [[3, "tianshou.policy.BasePolicy.process_fn"]], "process_fn() (tianshou.policy.branchingdqnpolicy method)": [[3, "tianshou.policy.BranchingDQNPolicy.process_fn"]], "process_fn() (tianshou.policy.cqlpolicy method)": [[3, "tianshou.policy.CQLPolicy.process_fn"]], "process_fn() (tianshou.policy.ddpgpolicy method)": [[3, "tianshou.policy.DDPGPolicy.process_fn"]], "process_fn() (tianshou.policy.dqnpolicy method)": [[3, "tianshou.policy.DQNPolicy.process_fn"]], "process_fn() (tianshou.policy.gailpolicy method)": [[3, "tianshou.policy.GAILPolicy.process_fn"]], "process_fn() (tianshou.policy.icmpolicy method)": [[3, "tianshou.policy.ICMPolicy.process_fn"]], "process_fn() (tianshou.policy.multiagentpolicymanager method)": [[3, "tianshou.policy.MultiAgentPolicyManager.process_fn"]], "process_fn() (tianshou.policy.npgpolicy method)": [[3, "tianshou.policy.NPGPolicy.process_fn"]], "process_fn() (tianshou.policy.pgpolicy method)": [[3, "tianshou.policy.PGPolicy.process_fn"]], "process_fn() (tianshou.policy.ppopolicy method)": [[3, "tianshou.policy.PPOPolicy.process_fn"]], "replace_policy() (tianshou.policy.multiagentpolicymanager method)": [[3, "tianshou.policy.MultiAgentPolicyManager.replace_policy"]], "set_agent_id() (tianshou.policy.basepolicy method)": [[3, "tianshou.policy.BasePolicy.set_agent_id"]], "set_eps() (tianshou.policy.dqnpolicy method)": [[3, "tianshou.policy.DQNPolicy.set_eps"]], "set_eps() (tianshou.policy.icmpolicy method)": [[3, "tianshou.policy.ICMPolicy.set_eps"]], "set_exp_noise() (tianshou.policy.ddpgpolicy method)": [[3, "tianshou.policy.DDPGPolicy.set_exp_noise"]], "soft_update() (tianshou.policy.basepolicy method)": [[3, "tianshou.policy.BasePolicy.soft_update"]], "sync_weight() (tianshou.policy.bcqpolicy method)": [[3, "tianshou.policy.BCQPolicy.sync_weight"]], "sync_weight() (tianshou.policy.cqlpolicy method)": [[3, "tianshou.policy.CQLPolicy.sync_weight"]], "sync_weight() (tianshou.policy.ddpgpolicy method)": [[3, "tianshou.policy.DDPGPolicy.sync_weight"]], "sync_weight() (tianshou.policy.dqnpolicy method)": [[3, "tianshou.policy.DQNPolicy.sync_weight"]], "sync_weight() (tianshou.policy.discretecrrpolicy method)": [[3, "tianshou.policy.DiscreteCRRPolicy.sync_weight"]], "sync_weight() (tianshou.policy.redqpolicy method)": [[3, "tianshou.policy.REDQPolicy.sync_weight"]], "sync_weight() (tianshou.policy.sacpolicy method)": [[3, "tianshou.policy.SACPolicy.sync_weight"]], "sync_weight() (tianshou.policy.td3policy method)": [[3, "tianshou.policy.TD3Policy.sync_weight"]], "train() (tianshou.policy.bcqpolicy method)": [[3, "tianshou.policy.BCQPolicy.train"]], "train() (tianshou.policy.cqlpolicy method)": [[3, "tianshou.policy.CQLPolicy.train"]], "train() (tianshou.policy.ddpgpolicy method)": [[3, "tianshou.policy.DDPGPolicy.train"]], "train() (tianshou.policy.dqnpolicy method)": [[3, "tianshou.policy.DQNPolicy.train"]], "train() (tianshou.policy.discretebcqpolicy method)": [[3, "tianshou.policy.DiscreteBCQPolicy.train"]], "train() (tianshou.policy.icmpolicy method)": [[3, "tianshou.policy.ICMPolicy.train"]], "train() (tianshou.policy.redqpolicy method)": [[3, "tianshou.policy.REDQPolicy.train"]], "train() (tianshou.policy.sacpolicy method)": [[3, "tianshou.policy.SACPolicy.train"]], "train() (tianshou.policy.td3policy method)": [[3, "tianshou.policy.TD3Policy.train"]], "update() (tianshou.policy.basepolicy method)": [[3, "tianshou.policy.BasePolicy.update"]], "value_mask() (tianshou.policy.basepolicy static method)": [[3, "tianshou.policy.BasePolicy.value_mask"]], "offlinetrainer (class in tianshou.trainer)": [[4, "tianshou.trainer.OfflineTrainer"]], "offpolicytrainer (class in tianshou.trainer)": [[4, "tianshou.trainer.OffpolicyTrainer"]], "onpolicytrainer (class in tianshou.trainer)": [[4, "tianshou.trainer.OnpolicyTrainer"]], "gather_info() (in module tianshou.trainer)": [[4, "tianshou.trainer.gather_info"]], "policy_update_fn() (tianshou.trainer.offlinetrainer method)": [[4, "tianshou.trainer.OfflineTrainer.policy_update_fn"]], "policy_update_fn() (tianshou.trainer.offpolicytrainer method)": [[4, "tianshou.trainer.OffpolicyTrainer.policy_update_fn"]], "policy_update_fn() (tianshou.trainer.onpolicytrainer method)": [[4, "tianshou.trainer.OnpolicyTrainer.policy_update_fn"]], "test_episode() (in module tianshou.trainer)": [[4, "tianshou.trainer.test_episode"]], "actor (class in tianshou.utils.net.continuous)": [[5, "tianshou.utils.net.continuous.Actor"]], "actor (class in tianshou.utils.net.discrete)": [[5, "tianshou.utils.net.discrete.Actor"]], "actorcritic (class in tianshou.utils.net.common)": [[5, "tianshou.utils.net.common.ActorCritic"]], "actorprob (class in tianshou.utils.net.continuous)": [[5, "tianshou.utils.net.continuous.ActorProb"]], "baselogger (class in tianshou.utils)": [[5, "tianshou.utils.BaseLogger"]], "basiclogger (class in tianshou.utils)": [[5, "tianshou.utils.BasicLogger"]], "branchingnet (class in tianshou.utils.net.common)": [[5, "tianshou.utils.net.common.BranchingNet"]], "cosineembeddingnetwork (class in tianshou.utils.net.discrete)": [[5, "tianshou.utils.net.discrete.CosineEmbeddingNetwork"]], "critic (class in tianshou.utils.net.continuous)": [[5, "tianshou.utils.net.continuous.Critic"]], "critic (class in tianshou.utils.net.discrete)": [[5, "tianshou.utils.net.discrete.Critic"]], "dataparallelnet (class in tianshou.utils.net.common)": [[5, "tianshou.utils.net.common.DataParallelNet"]], "dummytqdm (class in tianshou.utils)": [[5, "tianshou.utils.DummyTqdm"]], "ensemblelinear (class in tianshou.utils.net.common)": [[5, "tianshou.utils.net.common.EnsembleLinear"]], "fractionproposalnetwork (class in tianshou.utils.net.discrete)": [[5, "tianshou.utils.net.discrete.FractionProposalNetwork"]], "fullquantilefunction (class in tianshou.utils.net.discrete)": [[5, "tianshou.utils.net.discrete.FullQuantileFunction"]], "implicitquantilenetwork (class in tianshou.utils.net.discrete)": [[5, "tianshou.utils.net.discrete.ImplicitQuantileNetwork"]], "intrinsiccuriositymodule (class in tianshou.utils.net.discrete)": [[5, "tianshou.utils.net.discrete.IntrinsicCuriosityModule"]], "lazylogger (class in tianshou.utils)": [[5, "tianshou.utils.LazyLogger"]], "mlp (class in tianshou.utils.net.common)": [[5, "tianshou.utils.net.common.MLP"]], "movavg (class in tianshou.utils)": [[5, "tianshou.utils.MovAvg"]], "multiplelrschedulers (class in tianshou.utils)": [[5, "tianshou.utils.MultipleLRSchedulers"]], "net (class in tianshou.utils.net.common)": [[5, "tianshou.utils.net.common.Net"]], "netbase (class in tianshou.utils.net.common)": [[5, "tianshou.utils.net.common.NetBase"]], "noisylinear (class in tianshou.utils.net.discrete)": [[5, "tianshou.utils.net.discrete.NoisyLinear"]], "perturbation (class in tianshou.utils.net.continuous)": [[5, "tianshou.utils.net.continuous.Perturbation"]], "recurrent (class in tianshou.utils.net.common)": [[5, "tianshou.utils.net.common.Recurrent"]], "recurrentactorprob (class in tianshou.utils.net.continuous)": [[5, "tianshou.utils.net.continuous.RecurrentActorProb"]], "recurrentcritic (class in tianshou.utils.net.continuous)": [[5, "tianshou.utils.net.continuous.RecurrentCritic"]], "runningmeanstd (class in tianshou.utils)": [[5, "tianshou.utils.RunningMeanStd"]], "tensorboardlogger (class in tianshou.utils)": [[5, "tianshou.utils.TensorboardLogger"]], "vae (class in tianshou.utils.net.continuous)": [[5, "tianshou.utils.net.continuous.VAE"]], "wandblogger (class in tianshou.utils)": [[5, "tianshou.utils.WandbLogger"]], "add() (tianshou.utils.movavg method)": [[5, "tianshou.utils.MovAvg.add"]], "decode() (tianshou.utils.net.continuous.vae method)": [[5, "tianshou.utils.net.continuous.VAE.decode"]], "deprecation() (in module tianshou.utils)": [[5, "tianshou.utils.deprecation"]], "f() (tianshou.utils.net.discrete.noisylinear method)": [[5, "tianshou.utils.net.discrete.NoisyLinear.f"]], "forward() (tianshou.utils.net.common.branchingnet method)": [[5, "tianshou.utils.net.common.BranchingNet.forward"]], "forward() (tianshou.utils.net.common.dataparallelnet method)": [[5, "tianshou.utils.net.common.DataParallelNet.forward"]], "forward() (tianshou.utils.net.common.ensemblelinear method)": [[5, "tianshou.utils.net.common.EnsembleLinear.forward"]], "forward() (tianshou.utils.net.common.mlp method)": [[5, "tianshou.utils.net.common.MLP.forward"]], "forward() (tianshou.utils.net.common.net method)": [[5, "tianshou.utils.net.common.Net.forward"]], "forward() (tianshou.utils.net.common.netbase method)": [[5, "tianshou.utils.net.common.NetBase.forward"]], "forward() (tianshou.utils.net.common.recurrent method)": [[5, "tianshou.utils.net.common.Recurrent.forward"]], "forward() (tianshou.utils.net.continuous.actor method)": [[5, "tianshou.utils.net.continuous.Actor.forward"]], "forward() (tianshou.utils.net.continuous.actorprob method)": [[5, "tianshou.utils.net.continuous.ActorProb.forward"]], "forward() (tianshou.utils.net.continuous.critic method)": [[5, "tianshou.utils.net.continuous.Critic.forward"]], "forward() (tianshou.utils.net.continuous.perturbation method)": [[5, "tianshou.utils.net.continuous.Perturbation.forward"]], "forward() (tianshou.utils.net.continuous.recurrentactorprob method)": [[5, "tianshou.utils.net.continuous.RecurrentActorProb.forward"]], "forward() (tianshou.utils.net.continuous.recurrentcritic method)": [[5, "tianshou.utils.net.continuous.RecurrentCritic.forward"]], "forward() (tianshou.utils.net.continuous.vae method)": [[5, "tianshou.utils.net.continuous.VAE.forward"]], "forward() (tianshou.utils.net.discrete.actor method)": [[5, "tianshou.utils.net.discrete.Actor.forward"]], "forward() (tianshou.utils.net.discrete.cosineembeddingnetwork method)": [[5, "tianshou.utils.net.discrete.CosineEmbeddingNetwork.forward"]], "forward() (tianshou.utils.net.discrete.critic method)": [[5, "tianshou.utils.net.discrete.Critic.forward"]], "forward() (tianshou.utils.net.discrete.fractionproposalnetwork method)": [[5, "tianshou.utils.net.discrete.FractionProposalNetwork.forward"]], "forward() (tianshou.utils.net.discrete.fullquantilefunction method)": [[5, "tianshou.utils.net.discrete.FullQuantileFunction.forward"]], "forward() (tianshou.utils.net.discrete.implicitquantilenetwork method)": [[5, "tianshou.utils.net.discrete.ImplicitQuantileNetwork.forward"]], "forward() (tianshou.utils.net.discrete.intrinsiccuriositymodule method)": [[5, "tianshou.utils.net.discrete.IntrinsicCuriosityModule.forward"]], "forward() (tianshou.utils.net.discrete.noisylinear method)": [[5, "tianshou.utils.net.discrete.NoisyLinear.forward"]], "get() (tianshou.utils.movavg method)": [[5, "tianshou.utils.MovAvg.get"]], "get_dict_state_decorator() (in module tianshou.utils.net.common)": [[5, "tianshou.utils.net.common.get_dict_state_decorator"]], "load() (tianshou.utils.wandblogger method)": [[5, "tianshou.utils.WandbLogger.load"]], "load_state_dict() (tianshou.utils.multiplelrschedulers method)": [[5, "tianshou.utils.MultipleLRSchedulers.load_state_dict"]], "log_test_data() (tianshou.utils.baselogger method)": [[5, "tianshou.utils.BaseLogger.log_test_data"]], "log_train_data() (tianshou.utils.baselogger method)": [[5, "tianshou.utils.BaseLogger.log_train_data"]], "log_update_data() (tianshou.utils.baselogger method)": [[5, "tianshou.utils.BaseLogger.log_update_data"]], "mean() (tianshou.utils.movavg method)": [[5, "tianshou.utils.MovAvg.mean"]], "miniblock() (in module tianshou.utils.net.common)": [[5, "tianshou.utils.net.common.miniblock"]], "norm() (tianshou.utils.runningmeanstd method)": [[5, "tianshou.utils.RunningMeanStd.norm"]], "reset() (tianshou.utils.net.discrete.noisylinear method)": [[5, "tianshou.utils.net.discrete.NoisyLinear.reset"]], "restore_data() (tianshou.utils.baselogger method)": [[5, "tianshou.utils.BaseLogger.restore_data"]], "restore_data() (tianshou.utils.lazylogger method)": [[5, "tianshou.utils.LazyLogger.restore_data"]], "restore_data() (tianshou.utils.tensorboardlogger method)": [[5, "tianshou.utils.TensorboardLogger.restore_data"]], "restore_data() (tianshou.utils.wandblogger method)": [[5, "tianshou.utils.WandbLogger.restore_data"]], "sample() (tianshou.utils.net.discrete.noisylinear method)": [[5, "tianshou.utils.net.discrete.NoisyLinear.sample"]], "sample_noise() (in module tianshou.utils.net.discrete)": [[5, "tianshou.utils.net.discrete.sample_noise"]], "save_data() (tianshou.utils.baselogger method)": [[5, "tianshou.utils.BaseLogger.save_data"]], "save_data() (tianshou.utils.lazylogger method)": [[5, "tianshou.utils.LazyLogger.save_data"]], "save_data() (tianshou.utils.tensorboardlogger method)": [[5, "tianshou.utils.TensorboardLogger.save_data"]], "save_data() (tianshou.utils.wandblogger method)": [[5, "tianshou.utils.WandbLogger.save_data"]], "set_postfix() (tianshou.utils.dummytqdm method)": [[5, "tianshou.utils.DummyTqdm.set_postfix"]], "state_dict() (tianshou.utils.multiplelrschedulers method)": [[5, "tianshou.utils.MultipleLRSchedulers.state_dict"]], "std() (tianshou.utils.movavg method)": [[5, "tianshou.utils.MovAvg.std"]], "step() (tianshou.utils.multiplelrschedulers method)": [[5, "tianshou.utils.MultipleLRSchedulers.step"]], "tianshou.utils": [[5, "module-tianshou.utils"]], "tianshou.utils.net.common": [[5, "module-tianshou.utils.net.common"]], "tianshou.utils.net.continuous": [[5, "module-tianshou.utils.net.continuous"]], "tianshou.utils.net.discrete": [[5, "module-tianshou.utils.net.discrete"]], "update() (tianshou.utils.dummytqdm method)": [[5, "tianshou.utils.DummyTqdm.update"]], "update() (tianshou.utils.runningmeanstd method)": [[5, "tianshou.utils.RunningMeanStd.update"]], "write() (tianshou.utils.baselogger method)": [[5, "tianshou.utils.BaseLogger.write"]], "write() (tianshou.utils.lazylogger method)": [[5, "tianshou.utils.LazyLogger.write"]], "write() (tianshou.utils.tensorboardlogger method)": [[5, "tianshou.utils.TensorboardLogger.write"]], "write() (tianshou.utils.wandblogger method)": [[5, "tianshou.utils.WandbLogger.write"]]}})